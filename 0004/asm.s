# command-line-arguments [command-line-arguments.test]
command-line-arguments.init STEXT size=73 args=0x0 locals=0x10 funcid=0x0 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	command-line-arguments.init(SB), PKGINIT|ABIInternal, $16-0
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	66
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	MOVL	$256, AX
	0x0013 00019 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	PCDATA	$1, $0
	0x0013 00019 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	CALL	github.com/bits-and-blooms/bitset.New(SB)
	0x0018 00024 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	CMPL	runtime.writeBarrier(SB), $0
	0x001f 00031 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	PCDATA	$0, $-2
	0x001f 00031 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	NOP
	0x0020 00032 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	JEQ	53
	0x0022 00034 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	CALL	runtime.gcWriteBarrier2(SB)
	0x0027 00039 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	MOVQ	AX, (R11)
	0x002a 00042 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	MOVQ	command-line-arguments.bs(SB), CX
	0x0031 00049 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	MOVQ	CX, 8(R11)
	0x0035 00053 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	MOVQ	AX, command-line-arguments.bs(SB)
	0x003c 00060 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	PCDATA	$0, $-1
	0x003c 00060 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	ADDQ	$8, SP
	0x0040 00064 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	POPQ	BP
	0x0041 00065 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	RET
	0x0042 00066 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:35)	NOP
	0x0042 00066 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0042 00066 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0047 00071 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0047 00071 (<autogenerated>:1)	JMP	0
	0x0000 49 3b 66 10 76 3c 55 48 89 e5 48 83 ec 08 b8 00  I;f.v<UH..H.....
	0x0010 01 00 00 e8 00 00 00 00 83 3d 00 00 00 00 00 90  .........=......
	0x0020 74 13 e8 00 00 00 00 49 89 03 48 8b 0d 00 00 00  t......I..H.....
	0x0030 00 49 89 4b 08 48 89 05 00 00 00 00 48 83 c4 08  .I.K.H......H...
	0x0040 5d c3 e8 00 00 00 00 eb b7                       ]........
	rel 20+4 t=R_CALL github.com/bits-and-blooms/bitset.New+0
	rel 26+4 t=R_PCREL runtime.writeBarrier+-1
	rel 35+4 t=R_CALL runtime.gcWriteBarrier2+0
	rel 45+4 t=R_PCREL command-line-arguments.bs+0
	rel 56+4 t=R_PCREL command-line-arguments.bs+0
	rel 67+4 t=R_CALL runtime.morestack_noctxt+0
command-line-arguments.(*AsciiVector).Set STEXT nosplit size=23 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:15)	TEXT	command-line-arguments.(*AsciiVector).Set(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:15)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:15)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:15)	FUNCDATA	$5, command-line-arguments.(*AsciiVector).Set.arginfo1(SB)
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:15)	FUNCDATA	$6, command-line-arguments.(*AsciiVector).Set.argliveinfo(SB)
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:15)	PCDATA	$3, $1
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:17)	TESTB	AL, (AX)
	0x0002 00002 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:16)	MOVL	BX, CX
	0x0004 00004 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:16)	SHRB	$6, BL
	0x0007 00007 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:17)	MOVBLZX	BL, DX
	0x000a 00010 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:17)	MOVQ	(AX)(DX*8), BX
	0x000e 00014 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:17)	BTSQ	CX, BX
	0x0012 00018 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:17)	MOVQ	BX, (AX)(DX*8)
	0x0016 00022 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:18)	RET
	0x0000 84 00 89 d9 c0 eb 06 0f b6 d3 48 8b 1c d0 48 0f  ..........H...H.
	0x0010 ab cb 48 89 1c d0 c3                             ..H....
command-line-arguments.AsciiVector.Get STEXT nosplit size=21 args=0x28 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (is_alpha_numeric_test.go:20)	TEXT	command-line-arguments.AsciiVector.Get(SB), NOSPLIT|NOFRAME|ABIInternal, $0-40
	0x0000 00000 (is_alpha_numeric_test.go:20)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (is_alpha_numeric_test.go:20)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (is_alpha_numeric_test.go:20)	FUNCDATA	$5, command-line-arguments.AsciiVector.Get.arginfo1(SB)
	0x0000 00000 (is_alpha_numeric_test.go:20)	FUNCDATA	$6, command-line-arguments.AsciiVector.Get.argliveinfo(SB)
	0x0000 00000 (is_alpha_numeric_test.go:20)	PCDATA	$3, $1
	0x0000 00000 (is_alpha_numeric_test.go:21)	MOVL	AX, CX
	0x0002 00002 (is_alpha_numeric_test.go:21)	SHRB	$6, AL
	0x0005 00005 (is_alpha_numeric_test.go:23)	MOVBLZX	AL, DX
	0x0008 00008 (is_alpha_numeric_test.go:23)	MOVQ	command-line-arguments.bv+8(SP)(DX*8), DX
	0x000d 00013 (is_alpha_numeric_test.go:23)	BTQ	CX, DX
	0x0011 00017 (is_alpha_numeric_test.go:23)	SETCS	AL
	0x0014 00020 (is_alpha_numeric_test.go:23)	RET
	0x0000 89 c1 c0 e8 06 0f b6 d0 48 8b 54 d4 08 48 0f a3  ........H.T..H..
	0x0010 ca 0f 92 c0 c3                                   .....
command-line-arguments.init.0 STEXT size=255 args=0x0 locals=0x38 funcid=0x0 align=0x0
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:38)	TEXT	command-line-arguments.init.0(SB), ABIInternal, $56-0
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:38)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:38)	PCDATA	$0, $-2
	0x0004 00004 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:38)	JLS	245
	0x000a 00010 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:38)	PCDATA	$0, $-1
	0x000a 00010 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:38)	PUSHQ	BP
	0x000b 00011 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:38)	MOVQ	SP, BP
	0x000e 00014 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:38)	SUBQ	$48, SP
	0x0012 00018 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:38)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0012 00018 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:38)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0012 00018 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:38)	XORL	AX, AX
	0x0014 00020 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	JMP	97
	0x0016 00022 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	MOVL	SI, command-line-arguments.i+28(SP)
	0x001a 00026 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	MOVQ	DI, command-line-arguments..autotmp_10+40(SP)
	0x001f 00031 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:40)	LEAQ	command-line-arguments.isDigit2(SB), CX
	0x0026 00038 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:40)	MOVB	$1, (CX)(AX*1)
	0x002a 00042 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:41)	MOVQ	command-line-arguments.bs(SB), AX
	0x0031 00049 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:41)	MOVLQSX	SI, BX
	0x0034 00052 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:41)	PCDATA	$1, $0
	0x0034 00052 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:41)	CALL	github.com/bits-and-blooms/bitset.(*BitSet).Set(SB)
	0x0039 00057 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:16)	MOVL	command-line-arguments.i+28(SP), CX
	0x003d 00061 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:16)	MOVL	CX, DX
	0x003f 00063 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:16)	SHRB	$6, CL
	0x0042 00066 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:17)	MOVBLZX	CL, CX
	0x0045 00069 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:17)	LEAQ	command-line-arguments.v(SB), SI
	0x004c 00076 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:17)	MOVQ	(SI)(CX*8), DI
	0x0050 00080 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:17)	BTSQ	DX, DI
	0x0054 00084 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:42)	XCHGL	AX, AX
	0x0055 00085 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:17)	MOVQ	DI, (SI)(CX*8)
	0x0059 00089 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	MOVQ	command-line-arguments..autotmp_10+40(SP), CX
	0x005e 00094 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	MOVQ	CX, AX
	0x0061 00097 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	CMPQ	AX, $57
	0x0065 00101 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	JGE	175
	0x0067 00103 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	LEAQ	go:string."1234567890abcdefghijklmnopqrtsuvwABCDEFGHIJKLMOPQRTUVWXYZ"(SB), DX
	0x006e 00110 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	MOVBLZX	(DX)(AX*1), SI
	0x0072 00114 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	CMPL	SI, $128
	0x0078 00120 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	JGE	130
	0x007a 00122 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	LEAQ	1(AX), DI
	0x007e 00126 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	NOP
	0x0080 00128 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	JMP	158
	0x0082 00130 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	MOVL	$57, BX
	0x0087 00135 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	MOVQ	AX, CX
	0x008a 00138 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	MOVQ	DX, AX
	0x008d 00141 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	CALL	runtime.decoderune(SB)
	0x0092 00146 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	LEAQ	go:string."1234567890abcdefghijklmnopqrtsuvwABCDEFGHIJKLMOPQRTUVWXYZ"(SB), DX
	0x0099 00153 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	MOVL	AX, SI
	0x009b 00155 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	MOVQ	BX, DI
	0x009e 00158 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:40)	MOVLQSX	SI, AX
	0x00a1 00161 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:40)	CMPQ	AX, $256
	0x00a7 00167 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:40)	JCS	22
	0x00ad 00173 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:40)	JMP	234
	0x00af 00175 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:40)	XORL	AX, AX
	0x00b1 00177 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:39)	JMP	183
	0x00b3 00179 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:45)	LEAQ	1(CX), AX
	0x00b7 00183 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:45)	CMPQ	AX, $1024
	0x00bd 00189 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:45)	JGE	228
	0x00bf 00191 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:45)	MOVQ	AX, command-line-arguments.i+32(SP)
	0x00c4 00196 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:46)	CALL	math/rand.Uint32(SB)
	0x00c9 00201 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:46)	MOVQ	command-line-arguments.i+32(SP), CX
	0x00ce 00206 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:46)	LEAQ	command-line-arguments.randomBytes(SB), DX
	0x00d5 00213 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:46)	MOVB	AL, (DX)(CX*1)
	0x00d8 00216 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:47)	CMPB	AL, $127
	0x00da 00218 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:47)	JLS	179
	0x00dc 00220 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:48)	ADDL	$-127, AX
	0x00df 00223 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:48)	MOVB	AL, (DX)(CX*1)
	0x00e2 00226 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:48)	JMP	179
	0x00e4 00228 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:51)	ADDQ	$48, SP
	0x00e8 00232 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:51)	POPQ	BP
	0x00e9 00233 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:51)	RET
	0x00ea 00234 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:40)	MOVL	$256, CX
	0x00ef 00239 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:40)	CALL	runtime.panicIndex(SB)
	0x00f4 00244 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:40)	XCHGL	AX, AX
	0x00f5 00245 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:40)	NOP
	0x00f5 00245 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:38)	PCDATA	$1, $-1
	0x00f5 00245 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:38)	PCDATA	$0, $-2
	0x00f5 00245 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:38)	CALL	runtime.morestack_noctxt(SB)
	0x00fa 00250 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:38)	PCDATA	$0, $-1
	0x00fa 00250 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:38)	JMP	0
	0x0000 49 3b 66 10 0f 86 eb 00 00 00 55 48 89 e5 48 83  I;f.......UH..H.
	0x0010 ec 30 31 c0 eb 4b 89 74 24 1c 48 89 7c 24 28 48  .01..K.t$.H.|$(H
	0x0020 8d 0d 00 00 00 00 c6 04 01 01 48 8b 05 00 00 00  ..........H.....
	0x0030 00 48 63 de e8 00 00 00 00 8b 4c 24 1c 89 ca c0  .Hc.......L$....
	0x0040 e9 06 0f b6 c9 48 8d 35 00 00 00 00 48 8b 3c ce  .....H.5....H.<.
	0x0050 48 0f ab d7 90 48 89 3c ce 48 8b 4c 24 28 48 89  H....H.<.H.L$(H.
	0x0060 c8 48 83 f8 39 7d 48 48 8d 15 00 00 00 00 0f b6  .H..9}HH........
	0x0070 34 02 81 fe 80 00 00 00 7d 08 48 8d 78 01 66 90  4.......}.H.x.f.
	0x0080 eb 1c bb 39 00 00 00 48 89 c1 48 89 d0 e8 00 00  ...9...H..H.....
	0x0090 00 00 48 8d 15 00 00 00 00 89 c6 48 89 df 48 63  ..H........H..Hc
	0x00a0 c6 48 3d 00 01 00 00 0f 82 69 ff ff ff eb 3b 31  .H=......i....;1
	0x00b0 c0 eb 04 48 8d 41 01 48 3d 00 04 00 00 7d 25 48  ...H.A.H=....}%H
	0x00c0 89 44 24 20 e8 00 00 00 00 48 8b 4c 24 20 48 8d  .D$ .....H.L$ H.
	0x00d0 15 00 00 00 00 88 04 0a 3c 7f 76 d7 83 c0 81 88  ........<.v.....
	0x00e0 04 0a eb cf 48 83 c4 30 5d c3 b9 00 01 00 00 e8  ....H..0].......
	0x00f0 00 00 00 00 90 e8 00 00 00 00 e9 01 ff ff ff     ...............
	rel 34+4 t=R_PCREL command-line-arguments.isDigit2+0
	rel 45+4 t=R_PCREL command-line-arguments.bs+0
	rel 53+4 t=R_CALL github.com/bits-and-blooms/bitset.(*BitSet).Set+0
	rel 72+4 t=R_PCREL command-line-arguments.v+0
	rel 106+4 t=R_PCREL go:string."1234567890abcdefghijklmnopqrtsuvwABCDEFGHIJKLMOPQRTUVWXYZ"+0
	rel 142+4 t=R_CALL runtime.decoderune+0
	rel 149+4 t=R_PCREL go:string."1234567890abcdefghijklmnopqrtsuvwABCDEFGHIJKLMOPQRTUVWXYZ"+0
	rel 197+4 t=R_CALL math/rand.Uint32+0
	rel 209+4 t=R_PCREL command-line-arguments.randomBytes+0
	rel 240+4 t=R_CALL runtime.panicIndex+0
	rel 246+4 t=R_CALL runtime.morestack_noctxt+0
command-line-arguments.TestBitvector STEXT size=431 args=0x8 locals=0xa0 funcid=0x0 align=0x0
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	TEXT	command-line-arguments.TestBitvector(SB), ABIInternal, $160-8
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	LEAQ	-32(SP), R12
	0x0005 00005 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	CMPQ	R12, 16(R14)
	0x0009 00009 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	PCDATA	$0, $-2
	0x0009 00009 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	JLS	407
	0x000f 00015 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	PCDATA	$0, $-1
	0x000f 00015 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	PUSHQ	BP
	0x0010 00016 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	MOVQ	SP, BP
	0x0013 00019 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	SUBQ	$152, SP
	0x001a 00026 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	FUNCDATA	$0, gclocals·m/6RUmNv6NBhMUL8eleFFA==(SB)
	0x001a 00026 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	FUNCDATA	$1, gclocals·+9S+XYynBpW4mx80dwsCDA==(SB)
	0x001a 00026 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	FUNCDATA	$2, command-line-arguments.TestBitvector.stkobj(SB)
	0x001a 00026 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	FUNCDATA	$5, command-line-arguments.TestBitvector.arginfo1(SB)
	0x001a 00026 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	FUNCDATA	$6, command-line-arguments.TestBitvector.argliveinfo(SB)
	0x001a 00026 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	PCDATA	$3, $1
	0x001a 00026 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:56)	MOVQ	AX, command-line-arguments.t+168(SP)
	0x0022 00034 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:56)	PCDATA	$3, $-1
	0x0022 00034 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:54)	MOVUPS	X15, command-line-arguments.vect+32(SP)
	0x0028 00040 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:54)	MOVUPS	X15, command-line-arguments.vect+48(SP)
	0x002e 00046 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:55)	XCHGL	AX, AX
	0x002f 00047 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:17)	MOVQ	$1024, command-line-arguments.vect+32(SP)
	0x0038 00056 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:59)	MOVUPS	command-line-arguments.vect+32(SP), X0
	0x003d 00061 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:59)	MOVUPS	X0, command-line-arguments.bv+64(SP)
	0x0042 00066 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:59)	MOVUPS	command-line-arguments.vect+48(SP), X0
	0x0047 00071 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:59)	MOVUPS	X0, command-line-arguments.bv+80(SP)
	0x004c 00076 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:23)	MOVQ	command-line-arguments.bv+64(SP), DX
	0x0051 00081 (<unknown line number>)	NOP
	0x0051 00081 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:23)	BTL	$9, DX
	0x0055 00085 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:59)	JCC	148
	0x0057 00087 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:60)	LEAQ	type:string(SB), DX
	0x005e 00094 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:60)	MOVQ	DX, command-line-arguments..autotmp_21+136(SP)
	0x0066 00102 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:60)	LEAQ	command-line-arguments..stmp_1(SB), SI
	0x006d 00109 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:60)	MOVQ	SI, command-line-arguments..autotmp_21+144(SP)
	0x0075 00117 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:60)	TESTB	AL, (AX)
	0x0077 00119 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:60)	LEAQ	command-line-arguments..autotmp_21+136(SP), BX
	0x007f 00127 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:60)	MOVL	$1, CX
	0x0084 00132 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:60)	MOVQ	CX, DI
	0x0087 00135 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:60)	PCDATA	$1, $0
	0x0087 00135 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:60)	CALL	testing.(*common).Error(SB)
	0x008c 00140 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	MOVQ	command-line-arguments.t+168(SP), AX
	0x0094 00148 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:17)	XORL	CX, CX
	0x0096 00150 (<unknown line number>)	JMP	160
	0x0098 00152 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	MOVQ	DI, CX
	0x009b 00155 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	NOP
	0x00a0 00160 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	CMPQ	CX, $57
	0x00a4 00164 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	JGE	398
	0x00aa 00170 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	LEAQ	go:string."1234567890abcdefghijklmnopqrtsuvwABCDEFGHIJKLMOPQRTUVWXYZ"(SB), DX
	0x00b1 00177 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	MOVBLZX	(DX)(CX*1), SI
	0x00b5 00181 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	CMPL	SI, $128
	0x00bb 00187 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	JGE	195
	0x00bd 00189 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	LEAQ	1(CX), DI
	0x00c1 00193 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	JMP	228
	0x00c3 00195 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	MOVQ	DX, AX
	0x00c6 00198 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	MOVL	$57, BX
	0x00cb 00203 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	CALL	runtime.decoderune(SB)
	0x00d0 00208 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	LEAQ	go:string."1234567890abcdefghijklmnopqrtsuvwABCDEFGHIJKLMOPQRTUVWXYZ"(SB), DX
	0x00d7 00215 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	MOVL	AX, SI
	0x00d9 00217 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	MOVQ	BX, DI
	0x00dc 00220 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	MOVQ	command-line-arguments.t+168(SP), AX
	0x00e4 00228 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:64)	MOVUPS	command-line-arguments.v(SB), X0
	0x00eb 00235 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:64)	MOVUPS	X0, command-line-arguments.bv+64(SP)
	0x00f0 00240 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:64)	MOVUPS	command-line-arguments.v+16(SB), X0
	0x00f7 00247 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:64)	MOVUPS	X0, command-line-arguments.bv+80(SP)
	0x00fc 00252 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:21)	MOVL	SI, R8
	0x00ff 00255 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:21)	SHRB	$6, SIB
	0x0103 00259 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:23)	MOVBLZX	SIB, SI
	0x0107 00263 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:23)	MOVQ	command-line-arguments.bv+64(SP)(SI*8), SI
	0x010c 00268 (<unknown line number>)	NOP
	0x010c 00268 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:23)	BTQ	R8, SI
	0x0110 00272 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:64)	JCS	152
	0x0112 00274 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	MOVQ	DI, command-line-arguments..autotmp_37+96(SP)
	0x0117 00279 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	MOVUPS	X15, command-line-arguments..autotmp_23+104(SP)
	0x011d 00285 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	MOVUPS	X15, command-line-arguments..autotmp_23+120(SP)
	0x0123 00291 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	LEAQ	type:string(SB), CX
	0x012a 00298 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	MOVQ	CX, command-line-arguments..autotmp_23+104(SP)
	0x012f 00303 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	LEAQ	command-line-arguments..stmp_2(SB), DX
	0x0136 00310 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	MOVQ	DX, command-line-arguments..autotmp_23+112(SP)
	0x013b 00315 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	MOVL	R8, AX
	0x013e 00318 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	PCDATA	$1, $1
	0x013e 00318 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	NOP
	0x0140 00320 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	CALL	runtime.convT32(SB)
	0x0145 00325 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	LEAQ	type:int32(SB), CX
	0x014c 00332 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	MOVQ	CX, command-line-arguments..autotmp_23+120(SP)
	0x0151 00337 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	MOVQ	AX, command-line-arguments..autotmp_23+128(SP)
	0x0159 00345 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	MOVQ	command-line-arguments.t+168(SP), AX
	0x0161 00353 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	TESTB	AL, (AX)
	0x0163 00355 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	LEAQ	command-line-arguments..autotmp_23+104(SP), BX
	0x0168 00360 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	MOVL	$2, DI
	0x016d 00365 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	MOVQ	DI, CX
	0x0170 00368 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	PCDATA	$1, $0
	0x0170 00368 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	CALL	testing.(*common).Error(SB)
	0x0175 00373 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	MOVQ	command-line-arguments.t+168(SP), AX
	0x017d 00381 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	LEAQ	go:string."1234567890abcdefghijklmnopqrtsuvwABCDEFGHIJKLMOPQRTUVWXYZ"(SB), DX
	0x0184 00388 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:63)	MOVQ	command-line-arguments..autotmp_37+96(SP), DI
	0x0189 00393 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:65)	JMP	152
	0x018e 00398 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:68)	ADDQ	$152, SP
	0x0195 00405 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:68)	POPQ	BP
	0x0196 00406 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:68)	RET
	0x0197 00407 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:68)	NOP
	0x0197 00407 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	PCDATA	$1, $-1
	0x0197 00407 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	PCDATA	$0, $-2
	0x0197 00407 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	MOVQ	AX, 8(SP)
	0x019c 00412 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	NOP
	0x01a0 00416 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	CALL	runtime.morestack_noctxt(SB)
	0x01a5 00421 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	PCDATA	$0, $-1
	0x01a5 00421 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	MOVQ	8(SP), AX
	0x01aa 00426 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:53)	JMP	0
	0x0000 4c 8d 64 24 e0 4d 3b 66 10 0f 86 88 01 00 00 55  L.d$.M;f.......U
	0x0010 48 89 e5 48 81 ec 98 00 00 00 48 89 84 24 a8 00  H..H......H..$..
	0x0020 00 00 44 0f 11 7c 24 20 44 0f 11 7c 24 30 90 48  ..D..|$ D..|$0.H
	0x0030 c7 44 24 20 00 04 00 00 0f 10 44 24 20 0f 11 44  .D$ ......D$ ..D
	0x0040 24 40 0f 10 44 24 30 0f 11 44 24 50 48 8b 54 24  $@..D$0..D$PH.T$
	0x0050 40 0f ba e2 09 73 3d 48 8d 15 00 00 00 00 48 89  @....s=H......H.
	0x0060 94 24 88 00 00 00 48 8d 35 00 00 00 00 48 89 b4  .$....H.5....H..
	0x0070 24 90 00 00 00 84 00 48 8d 9c 24 88 00 00 00 b9  $......H..$.....
	0x0080 01 00 00 00 48 89 cf e8 00 00 00 00 48 8b 84 24  ....H.......H..$
	0x0090 a8 00 00 00 31 c9 eb 08 48 89 f9 0f 1f 44 00 00  ....1...H....D..
	0x00a0 48 83 f9 39 0f 8d e4 00 00 00 48 8d 15 00 00 00  H..9......H.....
	0x00b0 00 0f b6 34 0a 81 fe 80 00 00 00 7d 06 48 8d 79  ...4.......}.H.y
	0x00c0 01 eb 21 48 89 d0 bb 39 00 00 00 e8 00 00 00 00  ..!H...9........
	0x00d0 48 8d 15 00 00 00 00 89 c6 48 89 df 48 8b 84 24  H........H..H..$
	0x00e0 a8 00 00 00 0f 10 05 00 00 00 00 0f 11 44 24 40  .............D$@
	0x00f0 0f 10 05 00 00 00 00 0f 11 44 24 50 41 89 f0 40  .........D$PA..@
	0x0100 c0 ee 06 40 0f b6 f6 48 8b 74 f4 40 4c 0f a3 c6  ...@...H.t.@L...
	0x0110 72 86 48 89 7c 24 60 44 0f 11 7c 24 68 44 0f 11  r.H.|$`D..|$hD..
	0x0120 7c 24 78 48 8d 0d 00 00 00 00 48 89 4c 24 68 48  |$xH......H.L$hH
	0x0130 8d 15 00 00 00 00 48 89 54 24 70 44 89 c0 66 90  ......H.T$pD..f.
	0x0140 e8 00 00 00 00 48 8d 0d 00 00 00 00 48 89 4c 24  .....H......H.L$
	0x0150 78 48 89 84 24 80 00 00 00 48 8b 84 24 a8 00 00  xH..$....H..$...
	0x0160 00 84 00 48 8d 5c 24 68 bf 02 00 00 00 48 89 f9  ...H.\$h.....H..
	0x0170 e8 00 00 00 00 48 8b 84 24 a8 00 00 00 48 8d 15  .....H..$....H..
	0x0180 00 00 00 00 48 8b 7c 24 60 e9 0a ff ff ff 48 81  ....H.|$`.....H.
	0x0190 c4 98 00 00 00 5d c3 48 89 44 24 08 0f 1f 40 00  .....].H.D$...@.
	0x01a0 e8 00 00 00 00 48 8b 44 24 08 e9 51 fe ff ff     .....H.D$..Q...
	rel 3+0 t=R_USEIFACE type:string+0
	rel 3+0 t=R_USEIFACE type:string+0
	rel 3+0 t=R_USEIFACE type:string+0
	rel 3+0 t=R_USEIFACE type:int32+0
	rel 90+4 t=R_PCREL type:string+0
	rel 105+4 t=R_PCREL command-line-arguments..stmp_1+0
	rel 136+4 t=R_CALL testing.(*common).Error+0
	rel 173+4 t=R_PCREL go:string."1234567890abcdefghijklmnopqrtsuvwABCDEFGHIJKLMOPQRTUVWXYZ"+0
	rel 204+4 t=R_CALL runtime.decoderune+0
	rel 211+4 t=R_PCREL go:string."1234567890abcdefghijklmnopqrtsuvwABCDEFGHIJKLMOPQRTUVWXYZ"+0
	rel 231+4 t=R_PCREL command-line-arguments.v+0
	rel 243+4 t=R_PCREL command-line-arguments.v+16
	rel 294+4 t=R_PCREL type:string+0
	rel 306+4 t=R_PCREL command-line-arguments..stmp_2+0
	rel 321+4 t=R_CALL runtime.convT32+0
	rel 328+4 t=R_PCREL type:int32+0
	rel 369+4 t=R_CALL testing.(*common).Error+0
	rel 384+4 t=R_PCREL go:string."1234567890abcdefghijklmnopqrtsuvwABCDEFGHIJKLMOPQRTUVWXYZ"+0
	rel 417+4 t=R_CALL runtime.morestack_noctxt+0
command-line-arguments.BenchmarkArrayIndex STEXT size=297 args=0x8 locals=0x50 funcid=0x0 align=0x0
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	TEXT	command-line-arguments.BenchmarkArrayIndex(SB), ABIInternal, $80-8
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	PCDATA	$0, $-2
	0x0004 00004 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	JLS	277
	0x000a 00010 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	PCDATA	$0, $-1
	0x000a 00010 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	PUSHQ	BP
	0x000b 00011 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	MOVQ	SP, BP
	0x000e 00014 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	SUBQ	$72, SP
	0x0012 00018 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	FUNCDATA	$0, gclocals·m/6RUmNv6NBhMUL8eleFFA==(SB)
	0x0012 00018 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	FUNCDATA	$1, gclocals·VtCL4RdUwCqwXEPeyJllRA==(SB)
	0x0012 00018 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	FUNCDATA	$5, command-line-arguments.BenchmarkArrayIndex.arginfo1(SB)
	0x0012 00018 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	FUNCDATA	$6, command-line-arguments.BenchmarkArrayIndex.argliveinfo(SB)
	0x0012 00018 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	PCDATA	$3, $1
	0x0012 00018 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:74)	MOVQ	AX, command-line-arguments.b+88(SP)
	0x0017 00023 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:74)	PCDATA	$3, $-1
	0x0017 00023 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:74)	XORL	CX, CX
	0x0019 00025 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:74)	JMP	32
	0x001b 00027 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:74)	INCQ	CX
	0x001e 00030 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:74)	NOP
	0x0020 00032 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:74)	CMPQ	424(AX), CX
	0x0027 00039 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:74)	JLE	50
	0x0029 00041 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:74)	MOVQ	CX, command-line-arguments.i+48(SP)
	0x002e 00046 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:74)	XORL	DX, DX
	0x0030 00048 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:75)	JMP	64
	0x0032 00050 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:84)	ADDQ	$72, SP
	0x0036 00054 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:84)	POPQ	BP
	0x0037 00055 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:84)	RET
	0x0038 00056 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:75)	INCQ	DX
	0x003b 00059 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:75)	NOP
	0x0040 00064 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:75)	CMPQ	DX, $1024
	0x0047 00071 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:75)	JGE	27
	0x0049 00073 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:75)	MOVQ	DX, command-line-arguments.i+40(SP)
	0x004e 00078 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	LEAQ	-1024(DX), BX
	0x0055 00085 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	MOVQ	BX, SI
	0x0058 00088 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	SARQ	$63, BX
	0x005c 00092 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	ANDQ	DX, BX
	0x005f 00095 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	LEAQ	command-line-arguments.randomBytes(SB), DI
	0x0066 00102 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	ADDQ	DI, BX
	0x0069 00105 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	MOVQ	BX, command-line-arguments..autotmp_20+64(SP)
	0x006e 00110 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	NEGQ	SI
	0x0071 00113 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	MOVQ	SI, command-line-arguments..autotmp_21+56(SP)
	0x0076 00118 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	XORL	R8, R8
	0x0079 00121 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	JMP	202
	0x007b 00123 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:78)	MOVQ	command-line-arguments.i+32(SP), AX
	0x0080 00128 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:78)	TESTQ	AX, AX
	0x0083 00131 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:78)	SETNE	command-line-arguments.result(SB)
	0x008a 00138 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:74)	MOVQ	command-line-arguments.b+88(SP), AX
	0x008f 00143 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:74)	MOVQ	command-line-arguments.i+48(SP), CX
	0x0094 00148 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:75)	MOVQ	command-line-arguments.i+40(SP), DX
	0x0099 00153 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:75)	LEAQ	command-line-arguments.randomBytes(SB), DI
	0x00a0 00160 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:79)	JMP	56
	0x00a2 00162 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	MOVQ	command-line-arguments.i+32(SP), R8
	0x00a7 00167 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	INCQ	R8
	0x00aa 00170 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:74)	MOVQ	command-line-arguments.b+88(SP), AX
	0x00af 00175 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:74)	MOVQ	command-line-arguments.i+48(SP), CX
	0x00b4 00180 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:75)	MOVQ	command-line-arguments.i+40(SP), DX
	0x00b9 00185 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	MOVQ	command-line-arguments..autotmp_20+64(SP), BX
	0x00be 00190 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	MOVQ	command-line-arguments..autotmp_21+56(SP), SI
	0x00c3 00195 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	LEAQ	command-line-arguments.randomBytes(SB), DI
	0x00ca 00202 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	CMPQ	R8, SI
	0x00cd 00205 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	JGE	56
	0x00d3 00211 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	MOVQ	R8, command-line-arguments.i+32(SP)
	0x00d8 00216 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:76)	MOVBLZX	(BX)(R8*1), AX
	0x00dd 00221 (<unknown line number>)	NOP
	0x00dd 00221 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/strings/strings.go:119)	XCHGL	AX, AX
	0x00de 00222 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/internal/stringslite/strings.go:25)	LEAQ	go:string."1234567890abcdefghijklmnopqrtsuvwABCDEFGHIJKLMOPQRTUVWXYZ"(SB), CX
	0x00e5 00229 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/internal/stringslite/strings.go:25)	MOVQ	CX, (SP)
	0x00e9 00233 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/internal/stringslite/strings.go:25)	MOVQ	$57, 8(SP)
	0x00f2 00242 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/internal/stringslite/strings.go:25)	MOVB	AL, 16(SP)
	0x00f6 00246 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/internal/stringslite/strings.go:25)	PCDATA	$1, $1
	0x00f6 00246 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/internal/stringslite/strings.go:25)	CALL	internal/bytealg.IndexByteString(SB)
	0x00fb 00251 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/internal/stringslite/strings.go:25)	XORPS	X15, X15
	0x00ff 00255 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/internal/stringslite/strings.go:25)	MOVQ	(TLS), R14
	0x0108 00264 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/internal/stringslite/strings.go:25)	CMPQ	24(SP), $0
	0x010e 00270 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:77)	JLT	162
	0x0110 00272 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:77)	JMP	123
	0x0115 00277 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:77)	NOP
	0x0115 00277 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	PCDATA	$1, $-1
	0x0115 00277 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	PCDATA	$0, $-2
	0x0115 00277 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	MOVQ	AX, 8(SP)
	0x011a 00282 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	CALL	runtime.morestack_noctxt(SB)
	0x011f 00287 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	PCDATA	$0, $-1
	0x011f 00287 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	MOVQ	8(SP), AX
	0x0124 00292 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:73)	JMP	0
	0x0000 49 3b 66 10 0f 86 0b 01 00 00 55 48 89 e5 48 83  I;f.......UH..H.
	0x0010 ec 48 48 89 44 24 58 31 c9 eb 05 48 ff c1 66 90  .HH.D$X1...H..f.
	0x0020 48 39 88 a8 01 00 00 7e 09 48 89 4c 24 30 31 d2  H9.....~.H.L$01.
	0x0030 eb 0e 48 83 c4 48 5d c3 48 ff c2 0f 1f 44 00 00  ..H..H].H....D..
	0x0040 48 81 fa 00 04 00 00 7d d2 48 89 54 24 28 48 8d  H......}.H.T$(H.
	0x0050 9a 00 fc ff ff 48 89 de 48 c1 fb 3f 48 21 d3 48  .....H..H..?H!.H
	0x0060 8d 3d 00 00 00 00 48 01 fb 48 89 5c 24 40 48 f7  .=....H..H.\$@H.
	0x0070 de 48 89 74 24 38 45 31 c0 eb 4f 48 8b 44 24 20  .H.t$8E1..OH.D$ 
	0x0080 48 85 c0 0f 95 05 00 00 00 00 48 8b 44 24 58 48  H.........H.D$XH
	0x0090 8b 4c 24 30 48 8b 54 24 28 48 8d 3d 00 00 00 00  .L$0H.T$(H.=....
	0x00a0 eb 96 4c 8b 44 24 20 49 ff c0 48 8b 44 24 58 48  ..L.D$ I..H.D$XH
	0x00b0 8b 4c 24 30 48 8b 54 24 28 48 8b 5c 24 40 48 8b  .L$0H.T$(H.\$@H.
	0x00c0 74 24 38 48 8d 3d 00 00 00 00 49 39 f0 0f 8d 65  t$8H.=....I9...e
	0x00d0 ff ff ff 4c 89 44 24 20 42 0f b6 04 03 90 48 8d  ...L.D$ B.....H.
	0x00e0 0d 00 00 00 00 48 89 0c 24 48 c7 44 24 08 39 00  .....H..$H.D$.9.
	0x00f0 00 00 88 44 24 10 e8 00 00 00 00 45 0f 57 ff 64  ...D$......E.W.d
	0x0100 4c 8b 34 25 00 00 00 00 48 83 7c 24 18 00 7c 92  L.4%....H.|$..|.
	0x0110 e9 66 ff ff ff 48 89 44 24 08 e8 00 00 00 00 48  .f...H.D$......H
	0x0120 8b 44 24 08 e9 d7 fe ff ff                       .D$......
	rel 98+4 t=R_PCREL command-line-arguments.randomBytes+0
	rel 134+4 t=R_PCREL command-line-arguments.result+0
	rel 156+4 t=R_PCREL command-line-arguments.randomBytes+0
	rel 198+4 t=R_PCREL command-line-arguments.randomBytes+0
	rel 225+4 t=R_PCREL go:string."1234567890abcdefghijklmnopqrtsuvwABCDEFGHIJKLMOPQRTUVWXYZ"+0
	rel 247+4 t=R_CALL internal/bytealg.IndexByteString+0
	rel 260+4 t=R_TLS_LE TLS+0
	rel 283+4 t=R_CALL runtime.morestack_noctxt+0
command-line-arguments.BenchmarkBranch STEXT nosplit size=138 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:86)	TEXT	command-line-arguments.BenchmarkBranch(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:86)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:86)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:86)	FUNCDATA	$5, command-line-arguments.BenchmarkBranch.arginfo1(SB)
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:86)	FUNCDATA	$6, command-line-arguments.BenchmarkBranch.argliveinfo(SB)
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:86)	PCDATA	$3, $1
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:87)	XORL	CX, CX
	0x0002 00002 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:87)	JMP	7
	0x0004 00004 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:87)	INCQ	CX
	0x0007 00007 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:87)	CMPQ	424(AX), CX
	0x000e 00014 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:87)	JLE	20
	0x0010 00016 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:87)	XORL	DX, DX
	0x0012 00018 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:88)	JMP	32
	0x0014 00020 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:97)	RET
	0x0015 00021 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:88)	INCQ	DX
	0x0018 00024 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:88)	NOP
	0x0020 00032 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:88)	CMPQ	DX, $1024
	0x0027 00039 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:88)	JGE	4
	0x0029 00041 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:89)	LEAQ	-1024(DX), BX
	0x0030 00048 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:89)	MOVQ	BX, SI
	0x0033 00051 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:89)	SARQ	$63, BX
	0x0037 00055 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:89)	ANDQ	DX, BX
	0x003a 00058 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:89)	LEAQ	command-line-arguments.randomBytes(SB), DI
	0x0041 00065 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:89)	ADDQ	DI, BX
	0x0044 00068 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:89)	NEGQ	SI
	0x0047 00071 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:89)	XORL	R8, R8
	0x004a 00074 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:89)	JMP	96
	0x004c 00076 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:91)	TESTQ	R8, R8
	0x004f 00079 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:91)	SETNE	command-line-arguments.result(SB)
	0x0056 00086 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:92)	JMP	21
	0x0058 00088 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:89)	INCQ	R8
	0x005b 00091 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:89)	NOP
	0x0060 00096 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:89)	CMPQ	R8, SI
	0x0063 00099 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:89)	JGE	21
	0x0065 00101 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:89)	MOVBLZX	(BX)(R8*1), R9
	0x006a 00106 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:90)	LEAL	-48(R9), R10
	0x006e 00110 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:90)	CMPB	R10B, $9
	0x0072 00114 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:90)	JLS	76
	0x0074 00116 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:90)	LEAL	-97(R9), R10
	0x0078 00120 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:90)	CMPB	R10B, $25
	0x007c 00124 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:90)	JLS	76
	0x007e 00126 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:90)	ADDL	$-65, R9
	0x0082 00130 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:90)	CMPB	R9B, $25
	0x0086 00134 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:90)	JHI	88
	0x0088 00136 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:90)	JMP	76
	0x0000 31 c9 eb 03 48 ff c1 48 39 88 a8 01 00 00 7e 04  1...H..H9.....~.
	0x0010 31 d2 eb 0c c3 48 ff c2 0f 1f 84 00 00 00 00 00  1....H..........
	0x0020 48 81 fa 00 04 00 00 7d db 48 8d 9a 00 fc ff ff  H......}.H......
	0x0030 48 89 de 48 c1 fb 3f 48 21 d3 48 8d 3d 00 00 00  H..H..?H!.H.=...
	0x0040 00 48 01 fb 48 f7 de 45 31 c0 eb 14 4d 85 c0 0f  .H..H..E1...M...
	0x0050 95 05 00 00 00 00 eb bd 49 ff c0 0f 1f 44 00 00  ........I....D..
	0x0060 49 39 f0 7d b0 46 0f b6 0c 03 45 8d 51 d0 41 80  I9.}.F....E.Q.A.
	0x0070 fa 09 76 d8 45 8d 51 9f 41 80 fa 19 76 ce 41 83  ..v.E.Q.A...v.A.
	0x0080 c1 bf 41 80 f9 19 77 d0 eb c2                    ..A...w...
	rel 61+4 t=R_PCREL command-line-arguments.randomBytes+0
	rel 82+4 t=R_PCREL command-line-arguments.result+0
command-line-arguments.BenchmarkAsciiVector STEXT nosplit size=152 args=0x8 locals=0x28 funcid=0x0 align=0x0
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:99)	TEXT	command-line-arguments.BenchmarkAsciiVector(SB), NOSPLIT|ABIInternal, $40-8
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:99)	PUSHQ	BP
	0x0001 00001 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:99)	MOVQ	SP, BP
	0x0004 00004 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:99)	SUBQ	$32, SP
	0x0008 00008 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:99)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0008 00008 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:99)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0008 00008 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:99)	FUNCDATA	$5, command-line-arguments.BenchmarkAsciiVector.arginfo1(SB)
	0x0008 00008 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:99)	FUNCDATA	$6, command-line-arguments.BenchmarkAsciiVector.argliveinfo(SB)
	0x0008 00008 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:99)	PCDATA	$3, $1
	0x0008 00008 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:100)	XORL	CX, CX
	0x000a 00010 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:100)	JMP	15
	0x000c 00012 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:100)	INCQ	CX
	0x000f 00015 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:100)	CMPQ	424(AX), CX
	0x0016 00022 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:100)	JLE	28
	0x0018 00024 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:100)	XORL	DX, DX
	0x001a 00026 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:101)	JMP	37
	0x001c 00028 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:110)	ADDQ	$32, SP
	0x0020 00032 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:110)	POPQ	BP
	0x0021 00033 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:110)	RET
	0x0022 00034 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:101)	INCQ	DX
	0x0025 00037 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:101)	CMPQ	DX, $1024
	0x002c 00044 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:101)	JGE	12
	0x002e 00046 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:102)	LEAQ	-1024(DX), BX
	0x0035 00053 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:102)	MOVQ	BX, SI
	0x0038 00056 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:102)	SARQ	$63, BX
	0x003c 00060 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:102)	ANDQ	DX, BX
	0x003f 00063 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:102)	LEAQ	command-line-arguments.randomBytes(SB), DI
	0x0046 00070 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:102)	ADDQ	DI, BX
	0x0049 00073 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:102)	NEGQ	SI
	0x004c 00076 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:102)	XORL	R8, R8
	0x004f 00079 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:102)	JMP	96
	0x0051 00081 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:104)	MOVB	$1, command-line-arguments.result(SB)
	0x0058 00088 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:105)	JMP	34
	0x005a 00090 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:102)	INCQ	R8
	0x005d 00093 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:102)	NOP
	0x0060 00096 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:102)	CMPQ	R8, SI
	0x0063 00099 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:102)	JGE	34
	0x0065 00101 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:102)	MOVBLZX	(BX)(R8*1), R9
	0x006a 00106 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:103)	MOVUPS	command-line-arguments.v(SB), X0
	0x0071 00113 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:103)	MOVUPS	X0, command-line-arguments.bv(SP)
	0x0075 00117 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:103)	MOVUPS	command-line-arguments.v+16(SB), X0
	0x007c 00124 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:103)	MOVUPS	X0, command-line-arguments.bv+16(SP)
	0x0081 00129 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:21)	MOVL	R9, R10
	0x0084 00132 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:21)	SHRB	$6, R9B
	0x0088 00136 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:23)	MOVBLZX	R9B, R9
	0x008c 00140 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:23)	MOVQ	command-line-arguments.bv(SP)(R9*8), R9
	0x0090 00144 (<unknown line number>)	NOP
	0x0090 00144 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:23)	BTQ	R10, R9
	0x0094 00148 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:103)	JCC	90
	0x0096 00150 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:103)	JMP	81
	0x0000 55 48 89 e5 48 83 ec 20 31 c9 eb 03 48 ff c1 48  UH..H.. 1...H..H
	0x0010 39 88 a8 01 00 00 7e 04 31 d2 eb 09 48 83 c4 20  9.....~.1...H.. 
	0x0020 5d c3 48 ff c2 48 81 fa 00 04 00 00 7d de 48 8d  ].H..H......}.H.
	0x0030 9a 00 fc ff ff 48 89 de 48 c1 fb 3f 48 21 d3 48  .....H..H..?H!.H
	0x0040 8d 3d 00 00 00 00 48 01 fb 48 f7 de 45 31 c0 eb  .=....H..H..E1..
	0x0050 0f c6 05 00 00 00 00 01 eb c8 49 ff c0 0f 1f 00  ..........I.....
	0x0060 49 39 f0 7d bd 46 0f b6 0c 03 0f 10 05 00 00 00  I9.}.F..........
	0x0070 00 0f 11 04 24 0f 10 05 00 00 00 00 0f 11 44 24  ....$.........D$
	0x0080 10 45 89 ca 41 c0 e9 06 45 0f b6 c9 4e 8b 0c cc  .E..A...E...N...
	0x0090 4d 0f a3 d1 73 c4 eb b9                          M...s...
	rel 66+4 t=R_PCREL command-line-arguments.randomBytes+0
	rel 83+4 t=R_PCREL command-line-arguments.result+-1
	rel 109+4 t=R_PCREL command-line-arguments.v+0
	rel 120+4 t=R_PCREL command-line-arguments.v+16
command-line-arguments.BenchmarkWillfLibBitvector STEXT nosplit size=166 args=0x8 locals=0x18 funcid=0x0 align=0x0
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:112)	TEXT	command-line-arguments.BenchmarkWillfLibBitvector(SB), NOSPLIT|ABIInternal, $24-8
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:112)	PUSHQ	BP
	0x0001 00001 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:112)	MOVQ	SP, BP
	0x0004 00004 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:112)	SUBQ	$16, SP
	0x0008 00008 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:112)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0008 00008 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:112)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0008 00008 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:112)	FUNCDATA	$5, command-line-arguments.BenchmarkWillfLibBitvector.arginfo1(SB)
	0x0008 00008 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:112)	FUNCDATA	$6, command-line-arguments.BenchmarkWillfLibBitvector.argliveinfo(SB)
	0x0008 00008 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:112)	PCDATA	$3, $1
	0x0008 00008 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:113)	XORL	CX, CX
	0x000a 00010 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:113)	JMP	15
	0x000c 00012 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:113)	INCQ	CX
	0x000f 00015 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:113)	CMPQ	424(AX), CX
	0x0016 00022 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:113)	JLE	28
	0x0018 00024 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:113)	XORL	DX, DX
	0x001a 00026 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:114)	JMP	37
	0x001c 00028 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:124)	ADDQ	$16, SP
	0x0020 00032 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:124)	POPQ	BP
	0x0021 00033 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:124)	RET
	0x0022 00034 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:114)	INCQ	DX
	0x0025 00037 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:114)	CMPQ	DX, $1024
	0x002c 00044 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:114)	JGE	12
	0x002e 00046 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:115)	LEAQ	-1024(DX), BX
	0x0035 00053 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:115)	MOVQ	BX, SI
	0x0038 00056 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:115)	SARQ	$63, BX
	0x003c 00060 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:115)	ANDQ	DX, BX
	0x003f 00063 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:115)	LEAQ	command-line-arguments.randomBytes(SB), DI
	0x0046 00070 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:115)	ADDQ	DI, BX
	0x0049 00073 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:115)	NEGQ	SI
	0x004c 00076 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:115)	XORL	R8, R8
	0x004f 00079 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:115)	JMP	96
	0x0051 00081 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:117)	TESTQ	R8, R8
	0x0054 00084 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:117)	SETNE	command-line-arguments.result(SB)
	0x005b 00091 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:118)	JMP	34
	0x005d 00093 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:115)	INCQ	R8
	0x0060 00096 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:115)	CMPQ	R8, SI
	0x0063 00099 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:115)	JGE	34
	0x0065 00101 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:115)	MOVBLZX	(BX)(R8*1), R9
	0x006a 00106 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:116)	MOVQ	command-line-arguments.bs(SB), R10
	0x0071 00113 (<unknown line number>)	NOP
	0x0071 00113 (/home/boris/go/pkg/mod/github.com/bits-and-blooms/bitset@v1.17.0/bitset.go:218)	CMPQ	(R10), R9
	0x0074 00116 (/home/boris/go/pkg/mod/github.com/bits-and-blooms/bitset@v1.17.0/bitset.go:218)	JLS	93
	0x0076 00118 (/home/boris/go/pkg/mod/github.com/bits-and-blooms/bitset@v1.17.0/bitset.go:221)	MOVQ	16(R10), R11
	0x007a 00122 (/home/boris/go/pkg/mod/github.com/bits-and-blooms/bitset@v1.17.0/bitset.go:221)	MOVQ	R9, R12
	0x007d 00125 (/home/boris/go/pkg/mod/github.com/bits-and-blooms/bitset@v1.17.0/bitset.go:221)	SHRQ	$6, R9
	0x0081 00129 (/home/boris/go/pkg/mod/github.com/bits-and-blooms/bitset@v1.17.0/bitset.go:221)	CMPQ	R11, R9
	0x0084 00132 (/home/boris/go/pkg/mod/github.com/bits-and-blooms/bitset@v1.17.0/bitset.go:221)	JLS	150
	0x0086 00134 (/home/boris/go/pkg/mod/github.com/bits-and-blooms/bitset@v1.17.0/bitset.go:221)	MOVQ	8(R10), R10
	0x008a 00138 (/home/boris/go/pkg/mod/github.com/bits-and-blooms/bitset@v1.17.0/bitset.go:221)	MOVQ	(R10)(R9*8), R9
	0x008e 00142 (/home/boris/go/pkg/mod/github.com/bits-and-blooms/bitset@v1.17.0/bitset.go:221)	BTQ	R12, R9
	0x0092 00146 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:116)	JCC	93
	0x0094 00148 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:116)	JMP	81
	0x0096 00150 (/home/boris/go/pkg/mod/github.com/bits-and-blooms/bitset@v1.17.0/bitset.go:221)	MOVQ	R9, AX
	0x0099 00153 (/home/boris/go/pkg/mod/github.com/bits-and-blooms/bitset@v1.17.0/bitset.go:221)	MOVQ	R11, CX
	0x009c 00156 (/home/boris/go/pkg/mod/github.com/bits-and-blooms/bitset@v1.17.0/bitset.go:221)	PCDATA	$1, $1
	0x009c 00156 (/home/boris/go/pkg/mod/github.com/bits-and-blooms/bitset@v1.17.0/bitset.go:221)	NOP
	0x00a0 00160 (/home/boris/go/pkg/mod/github.com/bits-and-blooms/bitset@v1.17.0/bitset.go:221)	CALL	runtime.panicIndexU(SB)
	0x00a5 00165 (/home/boris/go/pkg/mod/github.com/bits-and-blooms/bitset@v1.17.0/bitset.go:221)	XCHGL	AX, AX
	0x0000 55 48 89 e5 48 83 ec 10 31 c9 eb 03 48 ff c1 48  UH..H...1...H..H
	0x0010 39 88 a8 01 00 00 7e 04 31 d2 eb 09 48 83 c4 10  9.....~.1...H...
	0x0020 5d c3 48 ff c2 48 81 fa 00 04 00 00 7d de 48 8d  ].H..H......}.H.
	0x0030 9a 00 fc ff ff 48 89 de 48 c1 fb 3f 48 21 d3 48  .....H..H..?H!.H
	0x0040 8d 3d 00 00 00 00 48 01 fb 48 f7 de 45 31 c0 eb  .=....H..H..E1..
	0x0050 0f 4d 85 c0 0f 95 05 00 00 00 00 eb c5 49 ff c0  .M...........I..
	0x0060 49 39 f0 7d bd 46 0f b6 0c 03 4c 8b 15 00 00 00  I9.}.F....L.....
	0x0070 00 4d 39 0a 76 e7 4d 8b 5a 10 4d 89 cc 49 c1 e9  .M9.v.M.Z.M..I..
	0x0080 06 4d 39 cb 76 10 4d 8b 52 08 4f 8b 0c ca 4d 0f  .M9.v.M.R.O...M.
	0x0090 a3 e1 73 c9 eb bb 4c 89 c8 4c 89 d9 0f 1f 40 00  ..s...L..L....@.
	0x00a0 e8 00 00 00 00 90                                ......
	rel 66+4 t=R_PCREL command-line-arguments.randomBytes+0
	rel 87+4 t=R_PCREL command-line-arguments.result+0
	rel 109+4 t=R_PCREL command-line-arguments.bs+0
	rel 161+4 t=R_CALL runtime.panicIndexU+0
command-line-arguments.BenchmarkLookup STEXT nosplit size=135 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:126)	TEXT	command-line-arguments.BenchmarkLookup(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:126)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:126)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:126)	FUNCDATA	$5, command-line-arguments.BenchmarkLookup.arginfo1(SB)
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:126)	FUNCDATA	$6, command-line-arguments.BenchmarkLookup.argliveinfo(SB)
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:126)	PCDATA	$3, $1
	0x0000 00000 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:127)	XORL	CX, CX
	0x0002 00002 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:127)	JMP	7
	0x0004 00004 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:127)	INCQ	CX
	0x0007 00007 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:127)	CMPQ	424(AX), CX
	0x000e 00014 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:127)	JLE	20
	0x0010 00016 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:127)	XORL	DX, DX
	0x0012 00018 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:128)	JMP	32
	0x0014 00020 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:137)	RET
	0x0015 00021 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:128)	INCQ	DX
	0x0018 00024 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:128)	NOP
	0x0020 00032 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:128)	CMPQ	DX, $1024
	0x0027 00039 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:128)	JGE	4
	0x0029 00041 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:129)	LEAQ	-1024(DX), BX
	0x0030 00048 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:129)	MOVQ	BX, SI
	0x0033 00051 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:129)	SARQ	$63, BX
	0x0037 00055 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:129)	ANDQ	DX, BX
	0x003a 00058 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:129)	LEAQ	command-line-arguments.randomBytes(SB), DI
	0x0041 00065 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:129)	ADDQ	DI, BX
	0x0044 00068 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:129)	NEGQ	SI
	0x0047 00071 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:129)	XORL	R8, R8
	0x004a 00074 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:129)	JMP	101
	0x004c 00076 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:131)	TESTQ	R8, R8
	0x004f 00079 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:131)	SETNE	command-line-arguments.result(SB)
	0x0056 00086 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:132)	JMP	21
	0x0058 00088 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:132)	LEAQ	command-line-arguments.isDigit2(SB), R10
	0x005f 00095 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:132)	NOP
	0x0060 00096 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:129)	JMP	21
	0x0062 00098 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:129)	INCQ	R8
	0x0065 00101 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:129)	CMPQ	R8, SI
	0x0068 00104 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:129)	JGE	88
	0x006a 00106 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:129)	MOVBLZX	(BX)(R8*1), R9
	0x006f 00111 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:130)	LEAQ	command-line-arguments.isDigit2(SB), R10
	0x0076 00118 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:130)	MOVBLZX	(R10)(R9*1), R9
	0x007b 00123 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:130)	NOP
	0x0080 00128 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:130)	TESTB	R9B, R9B
	0x0083 00131 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:130)	JEQ	98
	0x0085 00133 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:130)	JMP	76
	0x0000 31 c9 eb 03 48 ff c1 48 39 88 a8 01 00 00 7e 04  1...H..H9.....~.
	0x0010 31 d2 eb 0c c3 48 ff c2 0f 1f 84 00 00 00 00 00  1....H..........
	0x0020 48 81 fa 00 04 00 00 7d db 48 8d 9a 00 fc ff ff  H......}.H......
	0x0030 48 89 de 48 c1 fb 3f 48 21 d3 48 8d 3d 00 00 00  H..H..?H!.H.=...
	0x0040 00 48 01 fb 48 f7 de 45 31 c0 eb 19 4d 85 c0 0f  .H..H..E1...M...
	0x0050 95 05 00 00 00 00 eb bd 4c 8d 15 00 00 00 00 90  ........L.......
	0x0060 eb b3 49 ff c0 49 39 f0 7d ee 46 0f b6 0c 03 4c  ..I..I9.}.F....L
	0x0070 8d 15 00 00 00 00 47 0f b6 0c 0a 0f 1f 44 00 00  ......G......D..
	0x0080 45 84 c9 74 dd eb c5                             E..t...
	rel 61+4 t=R_PCREL command-line-arguments.randomBytes+0
	rel 82+4 t=R_PCREL command-line-arguments.result+0
	rel 91+4 t=R_PCREL command-line-arguments.isDigit2+0
	rel 114+4 t=R_PCREL command-line-arguments.isDigit2+0
command-line-arguments.(*AsciiVector).Get STEXT dupok nosplit size=87 args=0x10 locals=0x28 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	command-line-arguments.(*AsciiVector).Get(SB), DUPOK|NOSPLIT|WRAPPER|ABIInternal, $40-16
	0x0000 00000 (<autogenerated>:1)	PUSHQ	BP
	0x0001 00001 (<autogenerated>:1)	MOVQ	SP, BP
	0x0004 00004 (<autogenerated>:1)	SUBQ	$32, SP
	0x0008 00008 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x000c 00012 (<autogenerated>:1)	TESTQ	R12, R12
	0x000f 00015 (<autogenerated>:1)	JNE	70
	0x0011 00017 (<autogenerated>:1)	NOP
	0x0011 00017 (<autogenerated>:1)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0011 00017 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0011 00017 (<autogenerated>:1)	FUNCDATA	$5, command-line-arguments.(*AsciiVector).Get.arginfo1(SB)
	0x0011 00017 (<autogenerated>:1)	FUNCDATA	$6, command-line-arguments.(*AsciiVector).Get.argliveinfo(SB)
	0x0011 00017 (<autogenerated>:1)	PCDATA	$3, $1
	0x0011 00017 (<autogenerated>:1)	TESTQ	AX, AX
	0x0014 00020 (<autogenerated>:1)	JEQ	63
	0x0016 00022 (<autogenerated>:1)	MOVUPS	(AX), X0
	0x0019 00025 (<autogenerated>:1)	MOVUPS	X0, command-line-arguments.bv(SP)
	0x001d 00029 (<autogenerated>:1)	MOVUPS	16(AX), X0
	0x0021 00033 (<autogenerated>:1)	MOVUPS	X0, command-line-arguments.bv+16(SP)
	0x0026 00038 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:21)	MOVL	BX, CX
	0x0028 00040 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:21)	SHRB	$6, BL
	0x002b 00043 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:23)	MOVBLZX	BL, DX
	0x002e 00046 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:23)	MOVQ	command-line-arguments.bv(SP)(DX*8), DX
	0x0032 00050 (<unknown line number>)	NOP
	0x0032 00050 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:23)	BTQ	CX, DX
	0x0036 00054 (/home/boris/projects/smidt-blog-examples/0004/is_alpha_numeric_test.go:23)	SETCS	AL
	0x0039 00057 (<autogenerated>:1)	ADDQ	$32, SP
	0x003d 00061 (<autogenerated>:1)	POPQ	BP
	0x003e 00062 (<autogenerated>:1)	RET
	0x003f 00063 (<autogenerated>:1)	PCDATA	$1, $1
	0x003f 00063 (<autogenerated>:1)	NOP
	0x0040 00064 (<autogenerated>:1)	CALL	runtime.panicwrap(SB)
	0x0045 00069 (<autogenerated>:1)	XCHGL	AX, AX
	0x0046 00070 (<autogenerated>:1)	LEAQ	48(SP), R13
	0x004b 00075 (<autogenerated>:1)	CMPQ	(R12), R13
	0x004f 00079 (<autogenerated>:1)	JNE	17
	0x0051 00081 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x0055 00085 (<autogenerated>:1)	JMP	17
	0x0000 55 48 89 e5 48 83 ec 20 4d 8b 66 20 4d 85 e4 75  UH..H.. M.f M..u
	0x0010 35 48 85 c0 74 29 0f 10 00 0f 11 04 24 0f 10 40  5H..t)......$..@
	0x0020 10 0f 11 44 24 10 89 d9 c0 eb 06 0f b6 d3 48 8b  ...D$.........H.
	0x0030 14 d4 48 0f a3 ca 0f 92 c0 48 83 c4 20 5d c3 90  ..H......H.. ]..
	0x0040 e8 00 00 00 00 90 4c 8d 6c 24 30 4d 39 2c 24 75  ......L.l$0M9,$u
	0x0050 c0 49 89 24 24 eb ba                             .I.$$..
	rel 65+4 t=R_CALL runtime.panicwrap+0
type:.eq.[2]interface {} STEXT dupok size=159 args=0x10 locals=0x28 funcid=0x0 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	type:.eq.[2]interface {}(SB), DUPOK|ABIInternal, $40-16
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	129
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$32, SP
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$5, type:.eq.[2]interface {}.arginfo1(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$6, type:.eq.[2]interface {}.argliveinfo(SB)
	0x000e 00014 (<autogenerated>:1)	PCDATA	$3, $1
	0x000e 00014 (<autogenerated>:1)	MOVQ	AX, command-line-arguments.p+48(SP)
	0x0013 00019 (<autogenerated>:1)	MOVQ	BX, command-line-arguments.q+56(SP)
	0x0018 00024 (<autogenerated>:1)	PCDATA	$3, $-1
	0x0018 00024 (<autogenerated>:1)	XORL	CX, CX
	0x001a 00026 (<autogenerated>:1)	JMP	46
	0x001c 00028 (<autogenerated>:1)	MOVQ	command-line-arguments..autotmp_6+24(SP), CX
	0x0021 00033 (<autogenerated>:1)	INCQ	CX
	0x0024 00036 (<autogenerated>:1)	MOVQ	command-line-arguments.q+56(SP), BX
	0x0029 00041 (<autogenerated>:1)	MOVQ	command-line-arguments.p+48(SP), AX
	0x002e 00046 (<autogenerated>:1)	CMPQ	CX, $2
	0x0032 00050 (<autogenerated>:1)	JGE	120
	0x0034 00052 (<autogenerated>:1)	MOVQ	CX, DX
	0x0037 00055 (<autogenerated>:1)	SHLQ	$4, CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	(AX)(CX*1), SI
	0x003f 00063 (<autogenerated>:1)	MOVQ	(BX)(CX*1), DI
	0x0043 00067 (<autogenerated>:1)	MOVQ	8(CX)(BX*1), R8
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(CX)(AX*1), R9
	0x004d 00077 (<autogenerated>:1)	CMPQ	DI, SI
	0x0050 00080 (<autogenerated>:1)	JNE	116
	0x0052 00082 (<autogenerated>:1)	MOVQ	DX, command-line-arguments..autotmp_6+24(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	SI, AX
	0x005a 00090 (<autogenerated>:1)	MOVQ	R9, BX
	0x005d 00093 (<autogenerated>:1)	MOVQ	R8, CX
	0x0060 00096 (<autogenerated>:1)	PCDATA	$1, $0
	0x0060 00096 (<autogenerated>:1)	CALL	runtime.efaceeq(SB)
	0x0065 00101 (<autogenerated>:1)	TESTB	AL, AL
	0x0067 00103 (<autogenerated>:1)	JNE	28
	0x0069 00105 (<autogenerated>:1)	MOVQ	command-line-arguments..autotmp_6+24(SP), CX
	0x006e 00110 (<autogenerated>:1)	CMPQ	CX, $2
	0x0072 00114 (<autogenerated>:1)	JMP	120
	0x0074 00116 (<autogenerated>:1)	CMPQ	DX, $2
	0x0078 00120 (<autogenerated>:1)	SETGE	AL
	0x007b 00123 (<autogenerated>:1)	ADDQ	$32, SP
	0x007f 00127 (<autogenerated>:1)	POPQ	BP
	0x0080 00128 (<autogenerated>:1)	RET
	0x0081 00129 (<autogenerated>:1)	NOP
	0x0081 00129 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0081 00129 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0081 00129 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0086 00134 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x008b 00139 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0090 00144 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0090 00144 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x0095 00149 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x009a 00154 (<autogenerated>:1)	JMP	0
	0x0000 49 3b 66 10 76 7b 55 48 89 e5 48 83 ec 20 48 89  I;f.v{UH..H.. H.
	0x0010 44 24 30 48 89 5c 24 38 31 c9 eb 12 48 8b 4c 24  D$0H.\$81...H.L$
	0x0020 18 48 ff c1 48 8b 5c 24 38 48 8b 44 24 30 48 83  .H..H.\$8H.D$0H.
	0x0030 f9 02 7d 44 48 89 ca 48 c1 e1 04 48 8b 34 08 48  ..}DH..H...H.4.H
	0x0040 8b 3c 0b 4c 8b 44 19 08 4c 8b 4c 01 08 48 39 f7  .<.L.D..L.L..H9.
	0x0050 75 22 48 89 54 24 18 48 89 f0 4c 89 cb 4c 89 c1  u"H.T$.H..L..L..
	0x0060 e8 00 00 00 00 84 c0 75 b3 48 8b 4c 24 18 48 83  .......u.H.L$.H.
	0x0070 f9 02 eb 04 48 83 fa 02 0f 9d c0 48 83 c4 20 5d  ....H......H.. ]
	0x0080 c3 48 89 44 24 08 48 89 5c 24 10 e8 00 00 00 00  .H.D$.H.\$......
	0x0090 48 8b 44 24 08 48 8b 5c 24 10 e9 61 ff ff ff     H.D$.H.\$..a...
	rel 97+4 t=R_CALL runtime.efaceeq+0
	rel 140+4 t=R_CALL runtime.morestack_noctxt+0
go:cuinfo.producer.command-line-arguments SDWARFCUINFO dupok size=0
	0x0000 72 65 67 61 62 69                                regabi
go:cuinfo.packagename.command-line-arguments SDWARFCUINFO dupok size=0
	0x0000 6d 61 69 6e                                      main
go:info.command-line-arguments.(*AsciiVector).Set$abstract SDWARFABSFCN dupok size=74
	0x0000 05 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 28 2a 41 73 63 69 69 56  guments.(*AsciiV
	0x0020 65 63 74 6f 72 29 2e 53 65 74 00 01 0f 01 21 62  ector).Set....!b
	0x0030 76 00 00 00 00 00 00 21 69 00 00 00 00 00 00 20  v......!i...... 
	0x0040 69 64 78 00 10 00 00 00 00 00                    idx.......
	rel 51+4 t=R_DWARFSECREF go:info.*command-line-arguments.AsciiVector+0
	rel 59+4 t=R_DWARFSECREF go:info.uint8+0
	rel 69+4 t=R_DWARFSECREF go:info.uint8+0
go:info.command-line-arguments.AsciiVector.Get$abstract SDWARFABSFCN dupok size=81
	0x0000 05 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 41 73 63 69 69 56 65 63  guments.AsciiVec
	0x0020 74 6f 72 2e 47 65 74 00 01 14 01 21 62 76 00 00  tor.Get....!bv..
	0x0030 00 00 00 00 21 69 00 00 00 00 00 00 20 69 64 78  ....!i...... idx
	0x0040 00 15 00 00 00 00 20 62 69 74 00 16 00 00 00 00  ...... bit......
	0x0050 00                                               .
	rel 48+4 t=R_DWARFSECREF go:info.command-line-arguments.AsciiVector+0
	rel 56+4 t=R_DWARFSECREF go:info.uint8+0
	rel 66+4 t=R_DWARFSECREF go:info.uint8+0
	rel 76+4 t=R_DWARFSECREF go:info.uint8+0
go:info.strings.IndexByte$abstract SDWARFABSFCN dupok size=39
	0x0000 05 73 74 72 69 6e 67 73 2e 49 6e 64 65 78 42 79  .strings.IndexBy
	0x0010 74 65 00 01 76 01 21 73 00 00 00 00 00 00 21 63  te..v.!s......!c
	0x0020 00 00 00 00 00 00 00                             .......
	rel 0+0 t=R_USETYPE type:int+0
	rel 0+0 t=R_USETYPE type:string+0
	rel 0+0 t=R_USETYPE type:uint8+0
	rel 26+4 t=R_DWARFSECREF go:info.string+0
	rel 34+4 t=R_DWARFSECREF go:info.uint8+0
go:info.internal/stringslite.IndexByte$abstract SDWARFABSFCN dupok size=52
	0x0000 05 69 6e 74 65 72 6e 61 6c 2f 73 74 72 69 6e 67  .internal/string
	0x0010 73 6c 69 74 65 2e 49 6e 64 65 78 42 79 74 65 00  slite.IndexByte.
	0x0020 01 18 01 21 73 00 00 00 00 00 00 21 63 00 00 00  ...!s......!c...
	0x0030 00 00 00 00                                      ....
	rel 0+0 t=R_USETYPE type:int+0
	rel 0+0 t=R_USETYPE type:string+0
	rel 0+0 t=R_USETYPE type:uint8+0
	rel 39+4 t=R_DWARFSECREF go:info.string+0
	rel 47+4 t=R_DWARFSECREF go:info.uint8+0
go:info.github.com/bits-and-blooms/bitset.(*BitSet).Test$abstract SDWARFABSFCN dupok size=71
	0x0000 05 67 69 74 68 75 62 2e 63 6f 6d 2f 62 69 74 73  .github.com/bits
	0x0010 2d 61 6e 64 2d 62 6c 6f 6f 6d 73 2f 62 69 74 73  -and-blooms/bits
	0x0020 65 74 2e 28 2a 42 69 74 53 65 74 29 2e 54 65 73  et.(*BitSet).Tes
	0x0030 74 00 01 d9 01 01 21 62 00 00 00 00 00 00 21 69  t.....!b......!i
	0x0040 00 00 00 00 00 00 00                             .......
	rel 0+0 t=R_USETYPE type:*github.com/bits-and-blooms/bitset.BitSet+0
	rel 0+0 t=R_USETYPE type:bool+0
	rel 0+0 t=R_USETYPE type:uint+0
	rel 58+4 t=R_DWARFSECREF go:info.*github.com/bits-and-blooms/bitset.BitSet+0
	rel 66+4 t=R_DWARFSECREF go:info.uint+0
go:info.github.com/bits-and-blooms/bitset.wordsIndex$abstract SDWARFABSFCN dupok size=59
	0x0000 05 67 69 74 68 75 62 2e 63 6f 6d 2f 62 69 74 73  .github.com/bits
	0x0010 2d 61 6e 64 2d 62 6c 6f 6f 6d 73 2f 62 69 74 73  -and-blooms/bits
	0x0020 65 74 2e 77 6f 72 64 73 49 6e 64 65 78 00 01 90  et.wordsIndex...
	0x0030 01 01 21 69 00 00 00 00 00 00 00                 ..!i.......
	rel 0+0 t=R_USETYPE type:uint+0
	rel 54+4 t=R_DWARFSECREF go:info.uint+0
command-line-arguments..inittask SNOPTRDATA size=24
	0x0000 00 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 0+0 t=R_INITORDER github.com/bits-and-blooms/bitset..inittask+0
	rel 0+0 t=R_INITORDER math/rand..inittask+0
	rel 0+0 t=R_INITORDER strings..inittask+0
	rel 0+0 t=R_INITORDER testing..inittask+0
	rel 8+8 t=R_ADDR command-line-arguments.init+0
	rel 16+8 t=R_ADDR command-line-arguments.init.0+0
type:.eqfunc32 SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	rel 0+8 t=R_ADDR runtime.memequal_varlen+0
runtime.memequal64·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal64+0
runtime.gcbits.0100000000000000 SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
type:.namedata.*main.AsciiVector. SRODATA dupok size=19
	0x0000 01 11 2a 6d 61 69 6e 2e 41 73 63 69 69 56 65 63  ..*main.AsciiVec
	0x0010 74 6f 72                                         tor
type:.namedata.*func(*main.AsciiVector, uint8) bool- SRODATA dupok size=38
	0x0000 00 24 2a 66 75 6e 63 28 2a 6d 61 69 6e 2e 41 73  .$*func(*main.As
	0x0010 63 69 69 56 65 63 74 6f 72 2c 20 75 69 6e 74 38  ciiVector, uint8
	0x0020 29 20 62 6f 6f 6c                                ) bool
type:*func(*command-line-arguments.AsciiVector, uint8) bool SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 18 24 2b 11 08 08 08 36 00 00 00 00 00 00 00 00  .$+....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*main.AsciiVector, uint8) bool-+0
	rel 48+8 t=R_ADDR type:func(*command-line-arguments.AsciiVector, uint8) bool+0
type:func(*command-line-arguments.AsciiVector, uint8) bool SRODATA dupok size=80
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 c2 6f 07 4a 02 08 08 33 00 00 00 00 00 00 00 00  .o.J...3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 02 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*main.AsciiVector, uint8) bool-+0
	rel 44+4 t=RelocType(-32763) type:*func(*command-line-arguments.AsciiVector, uint8) bool+0
	rel 56+8 t=R_ADDR type:*command-line-arguments.AsciiVector+0
	rel 64+8 t=R_ADDR type:uint8+0
	rel 72+8 t=R_ADDR type:bool+0
type:.namedata.*func(*main.AsciiVector, uint8)- SRODATA dupok size=33
	0x0000 00 1f 2a 66 75 6e 63 28 2a 6d 61 69 6e 2e 41 73  ..*func(*main.As
	0x0010 63 69 69 56 65 63 74 6f 72 2c 20 75 69 6e 74 38  ciiVector, uint8
	0x0020 29                                               )
type:*func(*command-line-arguments.AsciiVector, uint8) SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 1b d6 b0 c1 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*main.AsciiVector, uint8)-+0
	rel 48+8 t=R_ADDR type:func(*command-line-arguments.AsciiVector, uint8)+0
type:func(*command-line-arguments.AsciiVector, uint8) SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 56 89 08 b8 02 08 08 33 00 00 00 00 00 00 00 00  V......3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*main.AsciiVector, uint8)-+0
	rel 44+4 t=RelocType(-32763) type:*func(*command-line-arguments.AsciiVector, uint8)+0
	rel 56+8 t=R_ADDR type:*command-line-arguments.AsciiVector+0
	rel 64+8 t=R_ADDR type:uint8+0
type:.importpath.command-line-arguments. SRODATA dupok size=24
	0x0000 00 16 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61  ..command-line-a
	0x0010 72 67 75 6d 65 6e 74 73                          rguments
type:.namedata.Get. SRODATA dupok size=5
	0x0000 01 03 47 65 74                                   ..Get
type:.namedata.*func(uint8) bool- SRODATA dupok size=19
	0x0000 00 11 2a 66 75 6e 63 28 75 69 6e 74 38 29 20 62  ..*func(uint8) b
	0x0010 6f 6f 6c                                         ool
type:*func(uint8) bool SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 96 60 49 c2 08 08 08 36 00 00 00 00 00 00 00 00  .`I....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(uint8) bool-+0
	rel 48+8 t=R_ADDR type:func(uint8) bool+0
type:func(uint8) bool SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 8d 3c ae 09 02 08 08 33 00 00 00 00 00 00 00 00  .<.....3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(uint8) bool-+0
	rel 44+4 t=RelocType(-32763) type:*func(uint8) bool+0
	rel 56+8 t=R_ADDR type:uint8+0
	rel 64+8 t=R_ADDR type:bool+0
type:.namedata.Set. SRODATA dupok size=5
	0x0000 01 03 53 65 74                                   ..Set
type:.namedata.*func(uint8)- SRODATA dupok size=14
	0x0000 00 0c 2a 66 75 6e 63 28 75 69 6e 74 38 29        ..*func(uint8)
type:*func(uint8) SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 06 72 3d d7 08 08 08 36 00 00 00 00 00 00 00 00  .r=....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(uint8)-+0
	rel 48+8 t=R_ADDR type:func(uint8)+0
type:func(uint8) SRODATA dupok size=64
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 4e 09 42 f8 02 08 08 33 00 00 00 00 00 00 00 00  N.B....3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(uint8)-+0
	rel 44+4 t=RelocType(-32763) type:*func(uint8)+0
	rel 56+8 t=R_ADDR type:uint8+0
type:*command-line-arguments.AsciiVector SRODATA size=104
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b3 f6 97 59 09 08 08 36 00 00 00 00 00 00 00 00  ...Y...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 02 00 02 00  ................
	0x0040 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*main.AsciiVector.+0
	rel 48+8 t=R_ADDR type:command-line-arguments.AsciiVector+0
	rel 56+4 t=R_ADDROFF type:.importpath.command-line-arguments.+0
	rel 72+4 t=R_ADDROFF type:.namedata.Get.+0
	rel 76+4 t=R_METHODOFF type:func(uint8) bool+0
	rel 80+4 t=R_METHODOFF command-line-arguments.(*AsciiVector).Get+0
	rel 84+4 t=R_METHODOFF command-line-arguments.(*AsciiVector).Get+0
	rel 88+4 t=R_ADDROFF type:.namedata.Set.+0
	rel 92+4 t=R_METHODOFF type:func(uint8)+0
	rel 96+4 t=R_METHODOFF command-line-arguments.(*AsciiVector).Set+0
	rel 100+4 t=R_METHODOFF command-line-arguments.(*AsciiVector).Set+0
runtime.gcbits. SRODATA dupok size=0
type:.namedata.*func(main.AsciiVector, uint8) bool- SRODATA dupok size=37
	0x0000 00 23 2a 66 75 6e 63 28 6d 61 69 6e 2e 41 73 63  .#*func(main.Asc
	0x0010 69 69 56 65 63 74 6f 72 2c 20 75 69 6e 74 38 29  iiVector, uint8)
	0x0020 20 62 6f 6f 6c                                    bool
type:*func(command-line-arguments.AsciiVector, uint8) bool SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 00 51 eb e2 08 08 08 36 00 00 00 00 00 00 00 00  .Q.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(main.AsciiVector, uint8) bool-+0
	rel 48+8 t=R_ADDR type:func(command-line-arguments.AsciiVector, uint8) bool+0
type:func(command-line-arguments.AsciiVector, uint8) bool SRODATA dupok size=80
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 47 16 65 ad 02 08 08 33 00 00 00 00 00 00 00 00  G.e....3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 02 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(main.AsciiVector, uint8) bool-+0
	rel 44+4 t=RelocType(-32763) type:*func(command-line-arguments.AsciiVector, uint8) bool+0
	rel 56+8 t=R_ADDR type:command-line-arguments.AsciiVector+0
	rel 64+8 t=R_ADDR type:uint8+0
	rel 72+8 t=R_ADDR type:bool+0
type:command-line-arguments.AsciiVector SRODATA size=104
	0x0000 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0010 a1 f3 b1 f7 0f 08 08 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 00 00 00 00 01 00 01 00  ................
	0x0050 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc32+0
	rel 32+8 t=R_ADDR runtime.gcbits.+0
	rel 40+4 t=R_ADDROFF type:.namedata.*main.AsciiVector.+0
	rel 44+4 t=R_ADDROFF type:*command-line-arguments.AsciiVector+0
	rel 48+8 t=R_ADDR type:uint64+0
	rel 56+8 t=R_ADDR type:[]uint64+0
	rel 72+4 t=R_ADDROFF type:.importpath.command-line-arguments.+0
	rel 88+4 t=R_ADDROFF type:.namedata.Get.+0
	rel 92+4 t=R_METHODOFF type:func(uint8) bool+0
	rel 96+4 t=R_METHODOFF command-line-arguments.(*AsciiVector).Get+0
	rel 100+4 t=R_METHODOFF command-line-arguments.AsciiVector.Get+0
go:constinfo.command-line-arguments SDWARFCONST size=34
	0x0000 0b 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6d 61 73 6b 00 00 00 00  guments.mask....
	0x0020 00 3f                                            .?
	rel 29+4 t=R_DWARFSECREF go:info.int+0
command-line-arguments.randomBytes SNOPTRBSS size=1024
 SDWARFVAR size=51
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 61 6e 64 6f 6d 42 79  guments.randomBy
	0x0020 74 65 73 00 09 03 00 00 00 00 00 00 00 00 00 00  tes.............
	0x0030 00 00 01                                         ...
	rel 38+8 t=R_ADDR command-line-arguments.randomBytes+0
	rel 46+4 t=R_DWARFSECREF go:info.[1024]uint8+0
type:.eqfunc1024 SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 00 04 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR runtime.memequal_varlen+0
type:.namedata.*[1024]uint8- SRODATA dupok size=14
	0x0000 00 0c 2a 5b 31 30 32 34 5d 75 69 6e 74 38        ..*[1024]uint8
type:*[1024]uint8 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 19 13 e4 36 08 08 08 36 00 00 00 00 00 00 00 00  ...6...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[1024]uint8-+0
	rel 48+8 t=R_ADDR type:[1024]uint8+0
type:[1024]uint8 SRODATA dupok size=72
	0x0000 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 b7 d3 39 49 0a 01 01 11 00 00 00 00 00 00 00 00  ..9I............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 04 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc1024+0
	rel 32+8 t=R_ADDR runtime.gcbits.+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[1024]uint8-+0
	rel 44+4 t=RelocType(-32763) type:*[1024]uint8+0
	rel 48+8 t=R_ADDR type:uint8+0
	rel 56+8 t=R_ADDR type:[]uint8+0
command-line-arguments.isDigit2 SNOPTRBSS size=256
 SDWARFVAR size=48
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 69 73 44 69 67 69 74 32  guments.isDigit2
	0x0020 00 09 03 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	rel 35+8 t=R_ADDR command-line-arguments.isDigit2+0
	rel 43+4 t=R_DWARFSECREF go:info.[256]bool+0
type:.eqfunc256 SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR runtime.memequal_varlen+0
type:.namedata.*[256]bool- SRODATA dupok size=12
	0x0000 00 0a 2a 5b 32 35 36 5d 62 6f 6f 6c              ..*[256]bool
type:*[256]bool SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 69 08 cb d8 08 08 08 36 00 00 00 00 00 00 00 00  i......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[256]bool-+0
	rel 48+8 t=R_ADDR type:[256]bool+0
type:[256]bool SRODATA dupok size=72
	0x0000 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 e8 0a 2d fc 0a 01 01 11 00 00 00 00 00 00 00 00  ..-.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 01 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc256+0
	rel 32+8 t=R_ADDR runtime.gcbits.+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[256]bool-+0
	rel 44+4 t=RelocType(-32763) type:*[256]bool+0
	rel 48+8 t=R_ADDR type:bool+0
	rel 56+8 t=R_ADDR type:[]bool+0
command-line-arguments.bs SBSS size=8
 SDWARFVAR size=42
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 62 73 00 09 03 00 00 00  guments.bs......
	0x0020 00 00 00 00 00 00 00 00 00 01                    ..........
	rel 29+8 t=R_ADDR command-line-arguments.bs+0
	rel 37+4 t=R_DWARFSECREF go:info.*github.com/bits-and-blooms/bitset.BitSet+0
command-line-arguments.v SNOPTRBSS size=32
 SDWARFVAR size=41
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 76 00 09 03 00 00 00 00  guments.v.......
	0x0020 00 00 00 00 00 00 00 00 01                       .........
	rel 28+8 t=R_ADDR command-line-arguments.v+0
	rel 36+4 t=R_DWARFSECREF go:info.command-line-arguments.AsciiVector+0
command-line-arguments.result SNOPTRBSS size=1
 SDWARFVAR size=46
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 65 73 75 6c 74 00 09  guments.result..
	0x0020 03 00 00 00 00 00 00 00 00 00 00 00 00 01        ..............
	rel 33+8 t=R_ADDR command-line-arguments.result+0
	rel 41+4 t=R_DWARFSECREF go:info.bool+0
go:string."1234567890abcdefghijklmnopqrtsuvwABCDEFGHIJKLMOPQRTUVWXYZ" SRODATA dupok size=57
	0x0000 31 32 33 34 35 36 37 38 39 30 61 62 63 64 65 66  1234567890abcdef
	0x0010 67 68 69 6a 6b 6c 6d 6e 6f 70 71 72 74 73 75 76  ghijklmnopqrtsuv
	0x0020 77 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4f 50  wABCDEFGHIJKLMOP
	0x0030 51 52 54 55 56 57 58 59 5a                       QRTUVWXYZ
go:string."vect 10 is not set" SRODATA dupok size=18
	0x0000 76 65 63 74 20 31 30 20 69 73 20 6e 6f 74 20 73  vect 10 is not s
	0x0010 65 74                                            et
go:string."vect 10 is not set but get return true" SRODATA dupok size=38
	0x0000 76 65 63 74 20 31 30 20 69 73 20 6e 6f 74 20 73  vect 10 is not s
	0x0010 65 74 20 62 75 74 20 67 65 74 20 72 65 74 75 72  et but get retur
	0x0020 6e 20 74 72 75 65                                n true
go:string."vect alphaNumericCharacter is not set %i" SRODATA dupok size=40
	0x0000 76 65 63 74 20 61 6c 70 68 61 4e 75 6d 65 72 69  vect alphaNumeri
	0x0010 63 43 68 61 72 61 63 74 65 72 20 69 73 20 6e 6f  cCharacter is no
	0x0020 74 20 73 65 74 20 25 69                          t set %i
command-line-arguments..stmp_0 SRODATA static size=16
	0x0000 00 00 00 00 00 00 00 00 12 00 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR go:string."vect 10 is not set"+0
command-line-arguments..stmp_1 SRODATA static size=16
	0x0000 00 00 00 00 00 00 00 00 26 00 00 00 00 00 00 00  ........&.......
	rel 0+8 t=R_ADDR go:string."vect 10 is not set but get return true"+0
command-line-arguments..stmp_2 SRODATA static size=16
	0x0000 00 00 00 00 00 00 00 00 28 00 00 00 00 00 00 00  ........(.......
	rel 0+8 t=R_ADDR go:string."vect alphaNumericCharacter is not set %i"+0
runtime.nilinterequal·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.nilinterequal+0
type:.namedata.*[1]interface {}- SRODATA dupok size=18
	0x0000 00 10 2a 5b 31 5d 69 6e 74 65 72 66 61 63 65 20  ..*[1]interface 
	0x0010 7b 7d                                            {}
type:*[1]interface {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a8 0e 57 36 08 08 08 36 00 00 00 00 00 00 00 00  ..W6...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[1]interface {}-+0
	rel 48+8 t=R_ADDR type:[1]interface {}+0
runtime.gcbits.0200000000000000 SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
type:[1]interface {} SRODATA dupok size=72
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 6e 20 6a 3d 02 08 08 11 00 00 00 00 00 00 00 00  n j=............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.nilinterequal·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0200000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[1]interface {}-+0
	rel 44+4 t=RelocType(-32763) type:*[1]interface {}+0
	rel 48+8 t=R_ADDR type:interface {}+0
	rel 56+8 t=R_ADDR type:[]interface {}+0
type:.eqfunc.[2]interface {} SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR type:.eq.[2]interface {}+0
type:.namedata.*[2]interface {}- SRODATA dupok size=18
	0x0000 00 10 2a 5b 32 5d 69 6e 74 65 72 66 61 63 65 20  ..*[2]interface 
	0x0010 7b 7d                                            {}
type:*[2]interface {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 53 dc 6b 00 08 08 08 36 00 00 00 00 00 00 00 00  S.k....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[2]interface {}-+0
	rel 48+8 t=R_ADDR type:[2]interface {}+0
runtime.gcbits.0a00000000000000 SRODATA dupok size=8
	0x0000 0a 00 00 00 00 00 00 00                          ........
type:[2]interface {} SRODATA dupok size=72
	0x0000 20 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00   ....... .......
	0x0010 0a f3 b4 b4 02 08 08 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc.[2]interface {}+0
	rel 32+8 t=R_ADDR runtime.gcbits.0a00000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[2]interface {}-+0
	rel 44+4 t=RelocType(-32763) type:*[2]interface {}+0
	rel 48+8 t=R_ADDR type:interface {}+0
	rel 56+8 t=R_ADDR type:[]interface {}+0
gclocals·g2BeySu+wFnoycgXfElmcg== SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
gclocals·wgcWObbY2HYnK2SU/U22lA== SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 01 00                    ..........
gclocals·J5F+7Qw7O7ve2QcWC7DpeQ== SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
command-line-arguments.(*AsciiVector).Set.arginfo1 SRODATA static dupok size=5
	0x0000 00 08 08 01 ff                                   .....
command-line-arguments.(*AsciiVector).Set.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.AsciiVector.Get.arginfo1 SRODATA static dupok size=13
	0x0000 fe 00 08 08 08 10 08 18 08 fd 20 01 ff           .......... ..
command-line-arguments.AsciiVector.Get.argliveinfo SRODATA static dupok size=2
	0x0000 20 00                                             .
gclocals·m/6RUmNv6NBhMUL8eleFFA== SRODATA dupok size=11
	0x0000 03 00 00 00 01 00 00 00 01 01 00                 ...........
gclocals·+9S+XYynBpW4mx80dwsCDA== SRODATA dupok size=11
	0x0000 03 00 00 00 06 00 00 00 00 0a 00                 ...........
command-line-arguments.TestBitvector.stkobj SRODATA static size=40
	0x0000 02 00 00 00 00 00 00 00 d0 ff ff ff 20 00 00 00  ............ ...
	0x0010 20 00 00 00 00 00 00 00 f0 ff ff ff 10 00 00 00   ...............
	0x0020 10 00 00 00 00 00 00 00                          ........
	rel 20+4 t=R_ADDROFF runtime.gcbits.0a00000000000000+0
	rel 36+4 t=R_ADDROFF runtime.gcbits.0200000000000000+0
command-line-arguments.TestBitvector.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.TestBitvector.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·VtCL4RdUwCqwXEPeyJllRA== SRODATA dupok size=11
	0x0000 03 00 00 00 01 00 00 00 00 01 00                 ...........
command-line-arguments.BenchmarkArrayIndex.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.BenchmarkArrayIndex.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.BenchmarkBranch.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.BenchmarkBranch.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.BenchmarkAsciiVector.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.BenchmarkAsciiVector.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.BenchmarkWillfLibBitvector.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.BenchmarkWillfLibBitvector.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.BenchmarkLookup.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.BenchmarkLookup.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.(*AsciiVector).Get.arginfo1 SRODATA static dupok size=5
	0x0000 00 08 08 01 ff                                   .....
command-line-arguments.(*AsciiVector).Get.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·TjPuuCwdlCpTaRQGRKTrYw== SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 03 00                    ..........
type:.eq.[2]interface {}.arginfo1 SRODATA static dupok size=3
	0x0000 08 08 ff                                         ...
type:.eq.[2]interface {}.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
# command-line-arguments.test
main.init STEXT nosplit size=1 args=0x0 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	main.init(SB), NOSPLIT|NOFRAME|PKGINIT|ABIInternal, $0-0
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (<autogenerated>:1)	RET
	0x0000 c3                                               .
main.init.0 STEXT size=66 args=0x0 locals=0x8 funcid=0x0 align=0x0
	0x0000 00000 (_testmain.go:47)	TEXT	main.init.0(SB), ABIInternal, $8-0
	0x0000 00000 (_testmain.go:47)	CMPQ	SP, 16(R14)
	0x0004 00004 (_testmain.go:47)	PCDATA	$0, $-2
	0x0004 00004 (_testmain.go:47)	JLS	58
	0x0006 00006 (_testmain.go:47)	PCDATA	$0, $-1
	0x0006 00006 (_testmain.go:47)	PUSHQ	BP
	0x0007 00007 (_testmain.go:47)	MOVQ	SP, BP
	0x000a 00010 (_testmain.go:47)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000a 00010 (_testmain.go:47)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000a 00010 (_testmain.go:49)	MOVQ	$0, testing/internal/testdeps.ImportPath+8(SB)
	0x0015 00021 (_testmain.go:49)	CMPL	runtime.writeBarrier(SB), $0
	0x001c 00028 (_testmain.go:49)	PCDATA	$0, $-2
	0x001c 00028 (_testmain.go:49)	JEQ	45
	0x001e 00030 (_testmain.go:49)	MOVQ	testing/internal/testdeps.ImportPath(SB), AX
	0x0025 00037 (_testmain.go:49)	CALL	runtime.gcWriteBarrier1(SB)
	0x002a 00042 (_testmain.go:49)	MOVQ	AX, (R11)
	0x002d 00045 (_testmain.go:49)	MOVQ	$0, testing/internal/testdeps.ImportPath(SB)
	0x0038 00056 (_testmain.go:50)	PCDATA	$0, $-1
	0x0038 00056 (_testmain.go:50)	POPQ	BP
	0x0039 00057 (_testmain.go:50)	RET
	0x003a 00058 (_testmain.go:50)	NOP
	0x003a 00058 (_testmain.go:47)	PCDATA	$1, $-1
	0x003a 00058 (_testmain.go:47)	PCDATA	$0, $-2
	0x003a 00058 (_testmain.go:47)	CALL	runtime.morestack_noctxt(SB)
	0x003f 00063 (_testmain.go:47)	PCDATA	$0, $-1
	0x003f 00063 (_testmain.go:47)	NOP
	0x0040 00064 (_testmain.go:47)	JMP	0
	0x0000 49 3b 66 10 76 34 55 48 89 e5 48 c7 05 00 00 00  I;f.v4UH..H.....
	0x0010 00 00 00 00 00 83 3d 00 00 00 00 00 74 0f 48 8b  ......=.....t.H.
	0x0020 05 00 00 00 00 e8 00 00 00 00 49 89 03 48 c7 05  ..........I..H..
	0x0030 00 00 00 00 00 00 00 00 5d c3 e8 00 00 00 00 90  ........].......
	0x0040 eb be                                            ..
	rel 13+4 t=R_PCREL testing/internal/testdeps.ImportPath+4
	rel 23+4 t=R_PCREL runtime.writeBarrier+-1
	rel 33+4 t=R_PCREL testing/internal/testdeps.ImportPath+0
	rel 38+4 t=R_CALL runtime.gcWriteBarrier1+0
	rel 48+4 t=R_PCREL testing/internal/testdeps.ImportPath+-4
	rel 59+4 t=R_CALL runtime.morestack_noctxt+0
main.main STEXT size=181 args=0x0 locals=0x78 funcid=0x0 align=0x0
	0x0000 00000 (_testmain.go:52)	TEXT	main.main(SB), ABIInternal, $120-0
	0x0000 00000 (_testmain.go:52)	CMPQ	SP, 16(R14)
	0x0004 00004 (_testmain.go:52)	PCDATA	$0, $-2
	0x0004 00004 (_testmain.go:52)	JLS	171
	0x000a 00010 (_testmain.go:52)	PCDATA	$0, $-1
	0x000a 00010 (_testmain.go:52)	PUSHQ	BP
	0x000b 00011 (_testmain.go:52)	MOVQ	SP, BP
	0x000e 00014 (_testmain.go:52)	SUBQ	$112, SP
	0x0012 00018 (_testmain.go:52)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0012 00018 (_testmain.go:52)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0012 00018 (_testmain.go:53)	MOVQ	main.tests(SB), CX
	0x0019 00025 (_testmain.go:53)	MOVQ	main.examples(SB), DX
	0x0020 00032 (_testmain.go:53)	MOVQ	main.benchmarks(SB), R8
	0x0027 00039 (_testmain.go:53)	MOVQ	main.fuzzTargets(SB), R11
	0x002e 00046 (_testmain.go:53)	MOVQ	main.tests+8(SB), DI
	0x0035 00053 (_testmain.go:53)	MOVQ	main.benchmarks+8(SB), R9
	0x003c 00060 (_testmain.go:53)	MOVQ	main.fuzzTargets+8(SB), R12
	0x0043 00067 (_testmain.go:53)	MOVQ	main.examples+8(SB), R13
	0x004a 00074 (_testmain.go:53)	MOVQ	main.tests+16(SB), SI
	0x0051 00081 (_testmain.go:53)	MOVQ	main.benchmarks+16(SB), R10
	0x0058 00088 (_testmain.go:53)	MOVQ	main.fuzzTargets+16(SB), R15
	0x005f 00095 (_testmain.go:53)	MOVQ	main.examples+16(SB), AX
	0x0066 00102 (_testmain.go:53)	MOVQ	R11, (SP)
	0x006a 00106 (_testmain.go:53)	MOVQ	R12, 8(SP)
	0x006f 00111 (_testmain.go:53)	MOVQ	R15, 16(SP)
	0x0074 00116 (_testmain.go:53)	MOVQ	DX, 24(SP)
	0x0079 00121 (_testmain.go:53)	MOVQ	R13, 32(SP)
	0x007e 00126 (_testmain.go:53)	MOVQ	AX, 40(SP)
	0x0083 00131 (_testmain.go:53)	LEAQ	go:itab.testing/internal/testdeps.TestDeps,testing.testDeps(SB), AX
	0x008a 00138 (_testmain.go:53)	LEAQ	runtime.zerobase(SB), BX
	0x0091 00145 (_testmain.go:53)	PCDATA	$1, $0
	0x0091 00145 (_testmain.go:53)	CALL	testing.MainStart(SB)
	0x0096 00150 (_testmain.go:55)	CALL	testing.(*M).Run(SB)
	0x009b 00155 (_testmain.go:55)	NOP
	0x00a0 00160 (_testmain.go:55)	CALL	os.Exit(SB)
	0x00a5 00165 (_testmain.go:57)	ADDQ	$112, SP
	0x00a9 00169 (_testmain.go:57)	POPQ	BP
	0x00aa 00170 (_testmain.go:57)	RET
	0x00ab 00171 (_testmain.go:57)	NOP
	0x00ab 00171 (_testmain.go:52)	PCDATA	$1, $-1
	0x00ab 00171 (_testmain.go:52)	PCDATA	$0, $-2
	0x00ab 00171 (_testmain.go:52)	CALL	runtime.morestack_noctxt(SB)
	0x00b0 00176 (_testmain.go:52)	PCDATA	$0, $-1
	0x00b0 00176 (_testmain.go:52)	JMP	0
	0x0000 49 3b 66 10 0f 86 a1 00 00 00 55 48 89 e5 48 83  I;f.......UH..H.
	0x0010 ec 70 48 8b 0d 00 00 00 00 48 8b 15 00 00 00 00  .pH......H......
	0x0020 4c 8b 05 00 00 00 00 4c 8b 1d 00 00 00 00 48 8b  L......L......H.
	0x0030 3d 00 00 00 00 4c 8b 0d 00 00 00 00 4c 8b 25 00  =....L......L.%.
	0x0040 00 00 00 4c 8b 2d 00 00 00 00 48 8b 35 00 00 00  ...L.-....H.5...
	0x0050 00 4c 8b 15 00 00 00 00 4c 8b 3d 00 00 00 00 48  .L......L.=....H
	0x0060 8b 05 00 00 00 00 4c 89 1c 24 4c 89 64 24 08 4c  ......L..$L.d$.L
	0x0070 89 7c 24 10 48 89 54 24 18 4c 89 6c 24 20 48 89  .|$.H.T$.L.l$ H.
	0x0080 44 24 28 48 8d 05 00 00 00 00 48 8d 1d 00 00 00  D$(H......H.....
	0x0090 00 e8 00 00 00 00 e8 00 00 00 00 0f 1f 44 00 00  .............D..
	0x00a0 e8 00 00 00 00 48 83 c4 70 5d c3 e8 00 00 00 00  .....H..p]......
	0x00b0 e9 4b ff ff ff                                   .K...
	rel 3+0 t=R_USEIFACE type:testing/internal/testdeps.TestDeps+0
	rel 21+4 t=R_PCREL main.tests+0
	rel 28+4 t=R_PCREL main.examples+0
	rel 35+4 t=R_PCREL main.benchmarks+0
	rel 42+4 t=R_PCREL main.fuzzTargets+0
	rel 49+4 t=R_PCREL main.tests+8
	rel 56+4 t=R_PCREL main.benchmarks+8
	rel 63+4 t=R_PCREL main.fuzzTargets+8
	rel 70+4 t=R_PCREL main.examples+8
	rel 77+4 t=R_PCREL main.tests+16
	rel 84+4 t=R_PCREL main.benchmarks+16
	rel 91+4 t=R_PCREL main.fuzzTargets+16
	rel 98+4 t=R_PCREL main.examples+16
	rel 134+4 t=R_PCREL go:itab.testing/internal/testdeps.TestDeps,testing.testDeps+0
	rel 141+4 t=R_PCREL runtime.zerobase+0
	rel 146+4 t=R_CALL testing.MainStart+0
	rel 151+4 t=R_CALL testing.(*M).Run+0
	rel 161+4 t=R_CALL os.Exit+0
	rel 172+4 t=R_CALL runtime.morestack_noctxt+0
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.kind STEXT dupok nosplit size=44 args=0x18 locals=0x0 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.kind(SB), DUPOK|NOSPLIT|WRAPPER|NOFRAME|ABIInternal, $0-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0004 00004 (<autogenerated>:1)	TESTQ	R12, R12
	0x0007 00007 (<autogenerated>:1)	JNE	27
	0x0009 00009 (<autogenerated>:1)	NOP
	0x0009 00009 (<autogenerated>:1)	MOVQ	AX, reflect.f+8(FP)
	0x000e 00014 (<autogenerated>:1)	MOVQ	BX, reflect.f+16(FP)
	0x0013 00019 (<autogenerated>:1)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0013 00019 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0013 00019 (<autogenerated>:1)	FUNCDATA	$5, go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.kind.arginfo1(SB)
	0x0013 00019 (<autogenerated>:1)	FUNCDATA	$6, go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.kind.argliveinfo(SB)
	0x0013 00019 (<autogenerated>:1)	PCDATA	$3, $1
	0x0013 00019 (<autogenerated>:1)	XCHGL	AX, AX
	0x0014 00020 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:86)	ANDL	$31, CX
	0x0017 00023 (<unknown line number>)	NOP
	0x0017 00023 (<autogenerated>:1)	MOVQ	CX, AX
	0x001a 00026 (<autogenerated>:1)	RET
	0x001b 00027 (<autogenerated>:1)	LEAQ	8(SP), R13
	0x0020 00032 (<autogenerated>:1)	CMPQ	(R12), R13
	0x0024 00036 (<autogenerated>:1)	JNE	9
	0x0026 00038 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x002a 00042 (<autogenerated>:1)	JMP	9
	0x0000 4d 8b 66 20 4d 85 e4 75 12 48 89 44 24 08 48 89  M.f M..u.H.D$.H.
	0x0010 5c 24 10 90 83 e1 1f 48 89 c8 c3 4c 8d 6c 24 08  \$.....H...L.l$.
	0x0020 4d 39 2c 24 75 e3 49 89 24 24 eb dd              M9,$u.I.$$..
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.kind STEXT dupok nosplit size=34 args=0x8 locals=0x0 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.kind(SB), DUPOK|NOSPLIT|WRAPPER|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0004 00004 (<autogenerated>:1)	TESTQ	R12, R12
	0x0007 00007 (<autogenerated>:1)	JNE	17
	0x0009 00009 (<autogenerated>:1)	NOP
	0x0009 00009 (<autogenerated>:1)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0009 00009 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0009 00009 (<autogenerated>:1)	FUNCDATA	$5, go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.kind.arginfo1(SB)
	0x0009 00009 (<autogenerated>:1)	FUNCDATA	$6, go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.kind.argliveinfo(SB)
	0x0009 00009 (<autogenerated>:1)	PCDATA	$3, $1
	0x0009 00009 (<autogenerated>:1)	MOVQ	16(AX), AX
	0x000d 00013 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:86)	ANDL	$31, AX
	0x0010 00016 (<unknown line number>)	NOP
	0x0010 00016 (<autogenerated>:1)	RET
	0x0011 00017 (<autogenerated>:1)	LEAQ	8(SP), R13
	0x0016 00022 (<autogenerated>:1)	CMPQ	(R12), R13
	0x001a 00026 (<autogenerated>:1)	JNE	9
	0x001c 00028 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x0020 00032 (<autogenerated>:1)	JMP	9
	0x0000 4d 8b 66 20 4d 85 e4 75 08 48 8b 40 10 83 e0 1f  M.f M..u.H.@....
	0x0010 c3 4c 8d 6c 24 08 4d 39 2c 24 75 ed 49 89 24 24  .L.l$.M9,$u.I.$$
	0x0020 eb e7                                            ..
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBe STEXT dupok size=230 args=0x20 locals=0x30 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBe(SB), DUPOK|WRAPPER|ABIInternal, $48-32
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	156
	0x000a 00010 (<autogenerated>:1)	PCDATA	$0, $-1
	0x000a 00010 (<autogenerated>:1)	PUSHQ	BP
	0x000b 00011 (<autogenerated>:1)	MOVQ	SP, BP
	0x000e 00014 (<autogenerated>:1)	SUBQ	$40, SP
	0x0012 00018 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0016 00022 (<autogenerated>:1)	TESTQ	R12, R12
	0x0019 00025 (<autogenerated>:1)	JNE	206
	0x001f 00031 (<autogenerated>:1)	NOP
	0x001f 00031 (<autogenerated>:1)	MOVQ	AX, reflect.f+56(FP)
	0x0024 00036 (<autogenerated>:1)	MOVQ	BX, reflect.f+64(FP)
	0x0029 00041 (<autogenerated>:1)	FUNCDATA	$0, gclocals·jZtJ1ccH9bAYoe1wqsw9Mw==(SB)
	0x0029 00041 (<autogenerated>:1)	FUNCDATA	$1, gclocals·dGrMWTWIngKGfVYjHi0adA==(SB)
	0x0029 00041 (<autogenerated>:1)	FUNCDATA	$5, go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBe.arginfo1(SB)
	0x0029 00041 (<autogenerated>:1)	FUNCDATA	$6, go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBe.argliveinfo(SB)
	0x0029 00041 (<autogenerated>:1)	PCDATA	$3, $1
	0x0029 00041 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:217)	ANDL	$31, CX
	0x002c 00044 (<unknown line number>)	NOP
	0x002c 00044 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:217)	CMPQ	DI, CX
	0x002f 00047 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:217)	JNE	55
	0x0031 00049 (<autogenerated>:1)	ADDQ	$40, SP
	0x0035 00053 (<autogenerated>:1)	POPQ	BP
	0x0036 00054 (<autogenerated>:1)	RET
	0x0037 00055 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:217)	MOVQ	CX, main..autotmp_9+16(SP)
	0x003c 00060 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	PCDATA	$1, $1
	0x003c 00060 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	NOP
	0x0040 00064 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	CALL	reflect.valueMethodName(SB)
	0x0045 00069 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	BX, main..autotmp_10+24(SP)
	0x004a 00074 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	AX, main..autotmp_11+32(SP)
	0x004f 00079 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	LEAQ	type:reflect.ValueError(SB), AX
	0x0056 00086 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	PCDATA	$1, $2
	0x0056 00086 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	CALL	runtime.newobject(SB)
	0x005b 00091 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	main..autotmp_10+24(SP), CX
	0x0060 00096 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	CX, 8(AX)
	0x0064 00100 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	CMPL	runtime.writeBarrier(SB), $0
	0x006b 00107 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	PCDATA	$0, $-2
	0x006b 00107 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	JNE	141
	0x006d 00109 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	main..autotmp_11+32(SP), CX
	0x0072 00114 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	CX, (AX)
	0x0075 00117 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	PCDATA	$0, $-1
	0x0075 00117 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	main..autotmp_9+16(SP), CX
	0x007a 00122 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	CX, 16(AX)
	0x007e 00126 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	AX, BX
	0x0081 00129 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	LEAQ	type:*reflect.ValueError(SB), AX
	0x0088 00136 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	PCDATA	$1, $1
	0x0088 00136 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	CALL	runtime.gopanic(SB)
	0x008d 00141 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	PCDATA	$0, $-2
	0x008d 00141 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	CALL	runtime.gcWriteBarrier1(SB)
	0x0092 00146 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	main..autotmp_11+32(SP), CX
	0x0097 00151 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	CX, (R11)
	0x009a 00154 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	JMP	109
	0x009c 00156 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	NOP
	0x009c 00156 (<autogenerated>:1)	PCDATA	$1, $-1
	0x009c 00156 (<autogenerated>:1)	PCDATA	$0, $-2
	0x009c 00156 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x00a1 00161 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x00a6 00166 (<autogenerated>:1)	MOVQ	CX, 24(SP)
	0x00ab 00171 (<autogenerated>:1)	MOVQ	DI, 32(SP)
	0x00b0 00176 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x00b5 00181 (<autogenerated>:1)	PCDATA	$0, $-1
	0x00b5 00181 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x00ba 00186 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x00bf 00191 (<autogenerated>:1)	MOVQ	24(SP), CX
	0x00c4 00196 (<autogenerated>:1)	MOVQ	32(SP), DI
	0x00c9 00201 (<autogenerated>:1)	JMP	0
	0x00ce 00206 (<autogenerated>:1)	LEAQ	56(SP), R13
	0x00d3 00211 (<autogenerated>:1)	CMPQ	(R12), R13
	0x00d7 00215 (<autogenerated>:1)	JNE	31
	0x00dd 00221 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x00e1 00225 (<autogenerated>:1)	JMP	31
	0x0000 49 3b 66 10 0f 86 92 00 00 00 55 48 89 e5 48 83  I;f.......UH..H.
	0x0010 ec 28 4d 8b 66 20 4d 85 e4 0f 85 af 00 00 00 48  .(M.f M........H
	0x0020 89 44 24 38 48 89 5c 24 40 83 e1 1f 48 39 cf 75  .D$8H.\$@...H9.u
	0x0030 06 48 83 c4 28 5d c3 48 89 4c 24 10 0f 1f 40 00  .H..(].H.L$...@.
	0x0040 e8 00 00 00 00 48 89 5c 24 18 48 89 44 24 20 48  .....H.\$.H.D$ H
	0x0050 8d 05 00 00 00 00 e8 00 00 00 00 48 8b 4c 24 18  ...........H.L$.
	0x0060 48 89 48 08 83 3d 00 00 00 00 00 75 20 48 8b 4c  H.H..=.....u H.L
	0x0070 24 20 48 89 08 48 8b 4c 24 10 48 89 48 10 48 89  $ H..H.L$.H.H.H.
	0x0080 c3 48 8d 05 00 00 00 00 e8 00 00 00 00 e8 00 00  .H..............
	0x0090 00 00 48 8b 4c 24 20 49 89 0b eb d1 48 89 44 24  ..H.L$ I....H.D$
	0x00a0 08 48 89 5c 24 10 48 89 4c 24 18 48 89 7c 24 20  .H.\$.H.L$.H.|$ 
	0x00b0 e8 00 00 00 00 48 8b 44 24 08 48 8b 5c 24 10 48  .....H.D$.H.\$.H
	0x00c0 8b 4c 24 18 48 8b 7c 24 20 e9 32 ff ff ff 4c 8d  .L$.H.|$ .2...L.
	0x00d0 6c 24 38 4d 39 2c 24 0f 85 42 ff ff ff 49 89 24  l$8M9,$..B...I.$
	0x00e0 24 e9 39 ff ff ff                                $.9...
	rel 3+0 t=R_USEIFACE type:*reflect.ValueError+0
	rel 65+4 t=R_CALL reflect.valueMethodName+0
	rel 82+4 t=R_PCREL type:reflect.ValueError+0
	rel 87+4 t=R_CALL runtime.newobject+0
	rel 102+4 t=R_PCREL runtime.writeBarrier+-1
	rel 132+4 t=R_PCREL type:*reflect.ValueError+0
	rel 137+4 t=R_CALL runtime.gopanic+0
	rel 142+4 t=R_CALL runtime.gcWriteBarrier1+0
	rel 177+4 t=R_CALL runtime.morestack_noctxt+0
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBe STEXT dupok size=211 args=0x10 locals=0x30 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBe(SB), DUPOK|WRAPPER|ABIInternal, $48-16
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	148
	0x000a 00010 (<autogenerated>:1)	PCDATA	$0, $-1
	0x000a 00010 (<autogenerated>:1)	PUSHQ	BP
	0x000b 00011 (<autogenerated>:1)	MOVQ	SP, BP
	0x000e 00014 (<autogenerated>:1)	SUBQ	$40, SP
	0x0012 00018 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0016 00022 (<autogenerated>:1)	TESTQ	R12, R12
	0x0019 00025 (<autogenerated>:1)	JNE	180
	0x001f 00031 (<autogenerated>:1)	NOP
	0x001f 00031 (<autogenerated>:1)	FUNCDATA	$0, gclocals·ZzMiPAiVBg7DJ6dh/CjSag==(SB)
	0x001f 00031 (<autogenerated>:1)	FUNCDATA	$1, gclocals·dGrMWTWIngKGfVYjHi0adA==(SB)
	0x001f 00031 (<autogenerated>:1)	FUNCDATA	$5, go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBe.arginfo1(SB)
	0x001f 00031 (<autogenerated>:1)	FUNCDATA	$6, go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBe.argliveinfo(SB)
	0x001f 00031 (<autogenerated>:1)	PCDATA	$3, $1
	0x001f 00031 (<autogenerated>:1)	MOVQ	16(AX), AX
	0x0023 00035 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:217)	ANDL	$31, AX
	0x0026 00038 (<unknown line number>)	NOP
	0x0026 00038 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:217)	CMPQ	BX, AX
	0x0029 00041 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:217)	JNE	49
	0x002b 00043 (<autogenerated>:1)	ADDQ	$40, SP
	0x002f 00047 (<autogenerated>:1)	POPQ	BP
	0x0030 00048 (<autogenerated>:1)	RET
	0x0031 00049 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:217)	MOVQ	AX, main..autotmp_9+16(SP)
	0x0036 00054 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	PCDATA	$1, $1
	0x0036 00054 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	CALL	reflect.valueMethodName(SB)
	0x003b 00059 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	BX, main..autotmp_10+24(SP)
	0x0040 00064 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	AX, main..autotmp_11+32(SP)
	0x0045 00069 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	LEAQ	type:reflect.ValueError(SB), AX
	0x004c 00076 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	PCDATA	$1, $2
	0x004c 00076 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	CALL	runtime.newobject(SB)
	0x0051 00081 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	main..autotmp_10+24(SP), CX
	0x0056 00086 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	CX, 8(AX)
	0x005a 00090 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	CMPL	runtime.writeBarrier(SB), $0
	0x0061 00097 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	PCDATA	$0, $-2
	0x0061 00097 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	JNE	133
	0x0063 00099 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	main..autotmp_11+32(SP), CX
	0x0068 00104 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	CX, (AX)
	0x006b 00107 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	PCDATA	$0, $-1
	0x006b 00107 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	main..autotmp_9+16(SP), CX
	0x0070 00112 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	CX, 16(AX)
	0x0074 00116 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	AX, BX
	0x0077 00119 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	LEAQ	type:*reflect.ValueError(SB), AX
	0x007e 00126 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	PCDATA	$1, $1
	0x007e 00126 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	NOP
	0x0080 00128 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	CALL	runtime.gopanic(SB)
	0x0085 00133 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	PCDATA	$0, $-2
	0x0085 00133 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	CALL	runtime.gcWriteBarrier1(SB)
	0x008a 00138 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	main..autotmp_11+32(SP), CX
	0x008f 00143 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	MOVQ	CX, (R11)
	0x0092 00146 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	JMP	99
	0x0094 00148 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:218)	NOP
	0x0094 00148 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0094 00148 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0094 00148 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0099 00153 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x009e 00158 (<autogenerated>:1)	NOP
	0x00a0 00160 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x00a5 00165 (<autogenerated>:1)	PCDATA	$0, $-1
	0x00a5 00165 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x00aa 00170 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x00af 00175 (<autogenerated>:1)	JMP	0
	0x00b4 00180 (<autogenerated>:1)	LEAQ	56(SP), R13
	0x00b9 00185 (<autogenerated>:1)	NOP
	0x00c0 00192 (<autogenerated>:1)	CMPQ	(R12), R13
	0x00c4 00196 (<autogenerated>:1)	JNE	31
	0x00ca 00202 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x00ce 00206 (<autogenerated>:1)	JMP	31
	0x0000 49 3b 66 10 0f 86 8a 00 00 00 55 48 89 e5 48 83  I;f.......UH..H.
	0x0010 ec 28 4d 8b 66 20 4d 85 e4 0f 85 95 00 00 00 48  .(M.f M........H
	0x0020 8b 40 10 83 e0 1f 48 39 c3 75 06 48 83 c4 28 5d  .@....H9.u.H..(]
	0x0030 c3 48 89 44 24 10 e8 00 00 00 00 48 89 5c 24 18  .H.D$......H.\$.
	0x0040 48 89 44 24 20 48 8d 05 00 00 00 00 e8 00 00 00  H.D$ H..........
	0x0050 00 48 8b 4c 24 18 48 89 48 08 83 3d 00 00 00 00  .H.L$.H.H..=....
	0x0060 00 75 22 48 8b 4c 24 20 48 89 08 48 8b 4c 24 10  .u"H.L$ H..H.L$.
	0x0070 48 89 48 10 48 89 c3 48 8d 05 00 00 00 00 66 90  H.H.H..H......f.
	0x0080 e8 00 00 00 00 e8 00 00 00 00 48 8b 4c 24 20 49  ..........H.L$ I
	0x0090 89 0b eb cf 48 89 44 24 08 48 89 5c 24 10 66 90  ....H.D$.H.\$.f.
	0x00a0 e8 00 00 00 00 48 8b 44 24 08 48 8b 5c 24 10 e9  .....H.D$.H.\$..
	0x00b0 4c ff ff ff 4c 8d 6c 24 38 0f 1f 80 00 00 00 00  L...L.l$8.......
	0x00c0 4d 39 2c 24 0f 85 55 ff ff ff 49 89 24 24 e9 4c  M9,$..U...I.$$.L
	0x00d0 ff ff ff                                         ...
	rel 3+0 t=R_USEIFACE type:*reflect.ValueError+0
	rel 55+4 t=R_CALL reflect.valueMethodName+0
	rel 72+4 t=R_PCREL type:reflect.ValueError+0
	rel 77+4 t=R_CALL runtime.newobject+0
	rel 92+4 t=R_PCREL runtime.writeBarrier+-1
	rel 122+4 t=R_PCREL type:*reflect.ValueError+0
	rel 129+4 t=R_CALL runtime.gopanic+0
	rel 134+4 t=R_CALL runtime.gcWriteBarrier1+0
	rel 161+4 t=R_CALL runtime.morestack_noctxt+0
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeAssignable STEXT dupok size=116 args=0x18 locals=0x10 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeAssignable(SB), DUPOK|WRAPPER|ABIInternal, $16-24
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	62
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0012 00018 (<autogenerated>:1)	TESTQ	R12, R12
	0x0015 00021 (<autogenerated>:1)	JNE	99
	0x0017 00023 (<autogenerated>:1)	NOP
	0x0017 00023 (<autogenerated>:1)	MOVQ	AX, reflect.f+24(FP)
	0x001c 00028 (<autogenerated>:1)	MOVQ	BX, reflect.f+32(FP)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$5, go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeAssignable.arginfo1(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$6, go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeAssignable.argliveinfo(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$3, $1
	0x0021 00033 (<unknown line number>)	NOP
	0x0021 00033 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:243)	TESTQ	$96, CX
	0x0028 00040 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:243)	JNE	48
	0x002a 00042 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:243)	BTL	$8, CX
	0x002e 00046 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:243)	JCS	56
	0x0030 00048 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:244)	MOVQ	CX, AX
	0x0033 00051 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:244)	PCDATA	$1, $1
	0x0033 00051 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:244)	CALL	reflect.flag.mustBeAssignableSlow(SB)
	0x0038 00056 (<autogenerated>:1)	ADDQ	$8, SP
	0x003c 00060 (<autogenerated>:1)	POPQ	BP
	0x003d 00061 (<autogenerated>:1)	RET
	0x003e 00062 (<autogenerated>:1)	NOP
	0x003e 00062 (<autogenerated>:1)	PCDATA	$1, $-1
	0x003e 00062 (<autogenerated>:1)	PCDATA	$0, $-2
	0x003e 00062 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0043 00067 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x0048 00072 (<autogenerated>:1)	MOVQ	CX, 24(SP)
	0x004d 00077 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0052 00082 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0052 00082 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x0057 00087 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x005c 00092 (<autogenerated>:1)	MOVQ	24(SP), CX
	0x0061 00097 (<autogenerated>:1)	JMP	0
	0x0063 00099 (<autogenerated>:1)	LEAQ	24(SP), R13
	0x0068 00104 (<autogenerated>:1)	CMPQ	(R12), R13
	0x006c 00108 (<autogenerated>:1)	JNE	23
	0x006e 00110 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x0072 00114 (<autogenerated>:1)	JMP	23
	0x0000 49 3b 66 10 76 38 55 48 89 e5 48 83 ec 08 4d 8b  I;f.v8UH..H...M.
	0x0010 66 20 4d 85 e4 75 4c 48 89 44 24 18 48 89 5c 24  f M..uLH.D$.H.\$
	0x0020 20 48 f7 c1 60 00 00 00 75 06 0f ba e1 08 72 08   H..`...u.....r.
	0x0030 48 89 c8 e8 00 00 00 00 48 83 c4 08 5d c3 48 89  H.......H...].H.
	0x0040 44 24 08 48 89 5c 24 10 48 89 4c 24 18 e8 00 00  D$.H.\$.H.L$....
	0x0050 00 00 48 8b 44 24 08 48 8b 5c 24 10 48 8b 4c 24  ..H.D$.H.\$.H.L$
	0x0060 18 eb 9d 4c 8d 6c 24 18 4d 39 2c 24 75 a9 49 89  ...L.l$.M9,$u.I.
	0x0070 24 24 eb a3                                      $$..
	rel 52+4 t=R_CALL reflect.flag.mustBeAssignableSlow+0
	rel 78+4 t=R_CALL runtime.morestack_noctxt+0
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeAssignable STEXT dupok size=93 args=0x8 locals=0x10 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeAssignable(SB), DUPOK|WRAPPER|ABIInternal, $16-8
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	57
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0012 00018 (<autogenerated>:1)	TESTQ	R12, R12
	0x0015 00021 (<autogenerated>:1)	JNE	76
	0x0017 00023 (<autogenerated>:1)	NOP
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$5, go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeAssignable.arginfo1(SB)
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$6, go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeAssignable.argliveinfo(SB)
	0x0017 00023 (<autogenerated>:1)	PCDATA	$3, $1
	0x0017 00023 (<autogenerated>:1)	MOVQ	16(AX), AX
	0x001b 00027 (<unknown line number>)	NOP
	0x001b 00027 (<unknown line number>)	NOP
	0x0020 00032 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:243)	TESTQ	$96, AX
	0x0026 00038 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:243)	JNE	46
	0x0028 00040 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:243)	BTL	$8, AX
	0x002c 00044 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:243)	JCS	51
	0x002e 00046 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:244)	PCDATA	$1, $1
	0x002e 00046 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:244)	CALL	reflect.flag.mustBeAssignableSlow(SB)
	0x0033 00051 (<autogenerated>:1)	ADDQ	$8, SP
	0x0037 00055 (<autogenerated>:1)	POPQ	BP
	0x0038 00056 (<autogenerated>:1)	RET
	0x0039 00057 (<autogenerated>:1)	NOP
	0x0039 00057 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0039 00057 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0039 00057 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x003e 00062 (<autogenerated>:1)	NOP
	0x0040 00064 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0045 00069 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0045 00069 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004a 00074 (<autogenerated>:1)	JMP	0
	0x004c 00076 (<autogenerated>:1)	LEAQ	24(SP), R13
	0x0051 00081 (<autogenerated>:1)	CMPQ	(R12), R13
	0x0055 00085 (<autogenerated>:1)	JNE	23
	0x0057 00087 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x005b 00091 (<autogenerated>:1)	JMP	23
	0x0000 49 3b 66 10 76 33 55 48 89 e5 48 83 ec 08 4d 8b  I;f.v3UH..H...M.
	0x0010 66 20 4d 85 e4 75 35 48 8b 40 10 0f 1f 44 00 00  f M..u5H.@...D..
	0x0020 48 a9 60 00 00 00 75 06 0f ba e0 08 72 05 e8 00  H.`...u.....r...
	0x0030 00 00 00 48 83 c4 08 5d c3 48 89 44 24 08 66 90  ...H...].H.D$.f.
	0x0040 e8 00 00 00 00 48 8b 44 24 08 eb b4 4c 8d 6c 24  .....H.D$...L.l$
	0x0050 18 4d 39 2c 24 75 c0 49 89 24 24 eb ba           .M9,$u.I.$$..
	rel 47+4 t=R_CALL reflect.flag.mustBeAssignableSlow+0
	rel 65+4 t=R_CALL runtime.morestack_noctxt+0
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeAssignableSlow STEXT dupok size=108 args=0x18 locals=0x10 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeAssignableSlow(SB), DUPOK|WRAPPER|ABIInternal, $16-24
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	47
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0012 00018 (<autogenerated>:1)	TESTQ	R12, R12
	0x0015 00021 (<autogenerated>:1)	JNE	86
	0x0017 00023 (<autogenerated>:1)	NOP
	0x0017 00023 (<autogenerated>:1)	MOVQ	AX, reflect.f+24(FP)
	0x001c 00028 (<autogenerated>:1)	MOVQ	BX, reflect.f+32(FP)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$5, go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeAssignableSlow.arginfo1(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$6, go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeAssignableSlow.argliveinfo(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$3, $1
	0x0021 00033 (<autogenerated>:1)	MOVQ	CX, AX
	0x0024 00036 (<autogenerated>:1)	PCDATA	$1, $1
	0x0024 00036 (<autogenerated>:1)	CALL	reflect.flag.mustBeAssignableSlow(SB)
	0x0029 00041 (<autogenerated>:1)	ADDQ	$8, SP
	0x002d 00045 (<autogenerated>:1)	POPQ	BP
	0x002e 00046 (<autogenerated>:1)	RET
	0x002f 00047 (<autogenerated>:1)	NOP
	0x002f 00047 (<autogenerated>:1)	PCDATA	$1, $-1
	0x002f 00047 (<autogenerated>:1)	PCDATA	$0, $-2
	0x002f 00047 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0034 00052 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x0039 00057 (<autogenerated>:1)	MOVQ	CX, 24(SP)
	0x003e 00062 (<autogenerated>:1)	NOP
	0x0040 00064 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0045 00069 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0045 00069 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004a 00074 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x004f 00079 (<autogenerated>:1)	MOVQ	24(SP), CX
	0x0054 00084 (<autogenerated>:1)	JMP	0
	0x0056 00086 (<autogenerated>:1)	LEAQ	24(SP), R13
	0x005b 00091 (<autogenerated>:1)	NOP
	0x0060 00096 (<autogenerated>:1)	CMPQ	(R12), R13
	0x0064 00100 (<autogenerated>:1)	JNE	23
	0x0066 00102 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x006a 00106 (<autogenerated>:1)	JMP	23
	0x0000 49 3b 66 10 76 29 55 48 89 e5 48 83 ec 08 4d 8b  I;f.v)UH..H...M.
	0x0010 66 20 4d 85 e4 75 3f 48 89 44 24 18 48 89 5c 24  f M..u?H.D$.H.\$
	0x0020 20 48 89 c8 e8 00 00 00 00 48 83 c4 08 5d c3 48   H.......H...].H
	0x0030 89 44 24 08 48 89 5c 24 10 48 89 4c 24 18 66 90  .D$.H.\$.H.L$.f.
	0x0040 e8 00 00 00 00 48 8b 44 24 08 48 8b 5c 24 10 48  .....H.D$.H.\$.H
	0x0050 8b 4c 24 18 eb aa 4c 8d 6c 24 18 0f 1f 44 00 00  .L$...L.l$...D..
	0x0060 4d 39 2c 24 75 b1 49 89 24 24 eb ab              M9,$u.I.$$..
	rel 37+4 t=R_CALL reflect.flag.mustBeAssignableSlow+0
	rel 65+4 t=R_CALL runtime.morestack_noctxt+0
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeAssignableSlow STEXT dupok size=77 args=0x8 locals=0x10 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeAssignableSlow(SB), DUPOK|WRAPPER|ABIInternal, $16-8
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	43
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0012 00018 (<autogenerated>:1)	TESTQ	R12, R12
	0x0015 00021 (<autogenerated>:1)	JNE	60
	0x0017 00023 (<autogenerated>:1)	NOP
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$5, go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeAssignableSlow.arginfo1(SB)
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$6, go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeAssignableSlow.argliveinfo(SB)
	0x0017 00023 (<autogenerated>:1)	PCDATA	$3, $1
	0x0017 00023 (<autogenerated>:1)	MOVQ	16(AX), AX
	0x001b 00027 (<autogenerated>:1)	PCDATA	$1, $1
	0x001b 00027 (<autogenerated>:1)	NOP
	0x0020 00032 (<autogenerated>:1)	CALL	reflect.flag.mustBeAssignableSlow(SB)
	0x0025 00037 (<autogenerated>:1)	ADDQ	$8, SP
	0x0029 00041 (<autogenerated>:1)	POPQ	BP
	0x002a 00042 (<autogenerated>:1)	RET
	0x002b 00043 (<autogenerated>:1)	NOP
	0x002b 00043 (<autogenerated>:1)	PCDATA	$1, $-1
	0x002b 00043 (<autogenerated>:1)	PCDATA	$0, $-2
	0x002b 00043 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0030 00048 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0035 00053 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0035 00053 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x003a 00058 (<autogenerated>:1)	JMP	0
	0x003c 00060 (<autogenerated>:1)	LEAQ	24(SP), R13
	0x0041 00065 (<autogenerated>:1)	CMPQ	(R12), R13
	0x0045 00069 (<autogenerated>:1)	JNE	23
	0x0047 00071 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x004b 00075 (<autogenerated>:1)	JMP	23
	0x0000 49 3b 66 10 76 25 55 48 89 e5 48 83 ec 08 4d 8b  I;f.v%UH..H...M.
	0x0010 66 20 4d 85 e4 75 25 48 8b 40 10 0f 1f 44 00 00  f M..u%H.@...D..
	0x0020 e8 00 00 00 00 48 83 c4 08 5d c3 48 89 44 24 08  .....H...].H.D$.
	0x0030 e8 00 00 00 00 48 8b 44 24 08 eb c4 4c 8d 6c 24  .....H.D$...L.l$
	0x0040 18 4d 39 2c 24 75 d0 49 89 24 24 eb ca           .M9,$u.I.$$..
	rel 33+4 t=R_CALL reflect.flag.mustBeAssignableSlow+0
	rel 49+4 t=R_CALL runtime.morestack_noctxt+0
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeExported STEXT dupok size=115 args=0x18 locals=0x10 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeExported(SB), DUPOK|WRAPPER|ABIInternal, $16-24
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	61
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0012 00018 (<autogenerated>:1)	TESTQ	R12, R12
	0x0015 00021 (<autogenerated>:1)	JNE	98
	0x0017 00023 (<autogenerated>:1)	NOP
	0x0017 00023 (<autogenerated>:1)	MOVQ	AX, reflect.f+24(FP)
	0x001c 00028 (<autogenerated>:1)	MOVQ	BX, reflect.f+32(FP)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$5, go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeExported.arginfo1(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$6, go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeExported.argliveinfo(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$3, $1
	0x0021 00033 (<unknown line number>)	NOP
	0x0021 00033 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:225)	TESTQ	CX, CX
	0x0024 00036 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:225)	JEQ	47
	0x0026 00038 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:225)	TESTQ	$96, CX
	0x002d 00045 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:225)	JEQ	55
	0x002f 00047 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:226)	MOVQ	CX, AX
	0x0032 00050 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:226)	PCDATA	$1, $1
	0x0032 00050 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:226)	CALL	reflect.flag.mustBeExportedSlow(SB)
	0x0037 00055 (<autogenerated>:1)	ADDQ	$8, SP
	0x003b 00059 (<autogenerated>:1)	POPQ	BP
	0x003c 00060 (<autogenerated>:1)	RET
	0x003d 00061 (<autogenerated>:1)	NOP
	0x003d 00061 (<autogenerated>:1)	PCDATA	$1, $-1
	0x003d 00061 (<autogenerated>:1)	PCDATA	$0, $-2
	0x003d 00061 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0042 00066 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x0047 00071 (<autogenerated>:1)	MOVQ	CX, 24(SP)
	0x004c 00076 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0051 00081 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0051 00081 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x0056 00086 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x005b 00091 (<autogenerated>:1)	MOVQ	24(SP), CX
	0x0060 00096 (<autogenerated>:1)	JMP	0
	0x0062 00098 (<autogenerated>:1)	LEAQ	24(SP), R13
	0x0067 00103 (<autogenerated>:1)	CMPQ	(R12), R13
	0x006b 00107 (<autogenerated>:1)	JNE	23
	0x006d 00109 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x0071 00113 (<autogenerated>:1)	JMP	23
	0x0000 49 3b 66 10 76 37 55 48 89 e5 48 83 ec 08 4d 8b  I;f.v7UH..H...M.
	0x0010 66 20 4d 85 e4 75 4b 48 89 44 24 18 48 89 5c 24  f M..uKH.D$.H.\$
	0x0020 20 48 85 c9 74 09 48 f7 c1 60 00 00 00 74 08 48   H..t.H..`...t.H
	0x0030 89 c8 e8 00 00 00 00 48 83 c4 08 5d c3 48 89 44  .......H...].H.D
	0x0040 24 08 48 89 5c 24 10 48 89 4c 24 18 e8 00 00 00  $.H.\$.H.L$.....
	0x0050 00 48 8b 44 24 08 48 8b 5c 24 10 48 8b 4c 24 18  .H.D$.H.\$.H.L$.
	0x0060 eb 9e 4c 8d 6c 24 18 4d 39 2c 24 75 aa 49 89 24  ..L.l$.M9,$u.I.$
	0x0070 24 eb a4                                         $..
	rel 51+4 t=R_CALL reflect.flag.mustBeExportedSlow+0
	rel 77+4 t=R_CALL runtime.morestack_noctxt+0
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeExported STEXT dupok size=93 args=0x8 locals=0x10 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeExported(SB), DUPOK|WRAPPER|ABIInternal, $16-8
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	56
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0012 00018 (<autogenerated>:1)	TESTQ	R12, R12
	0x0015 00021 (<autogenerated>:1)	JNE	76
	0x0017 00023 (<autogenerated>:1)	NOP
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$5, go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeExported.arginfo1(SB)
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$6, go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeExported.argliveinfo(SB)
	0x0017 00023 (<autogenerated>:1)	PCDATA	$3, $1
	0x0017 00023 (<autogenerated>:1)	MOVQ	16(AX), AX
	0x001b 00027 (<unknown line number>)	NOP
	0x001b 00027 (<unknown line number>)	NOP
	0x0020 00032 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:225)	TESTQ	AX, AX
	0x0023 00035 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:225)	JEQ	45
	0x0025 00037 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:225)	TESTQ	$96, AX
	0x002b 00043 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:225)	JEQ	50
	0x002d 00045 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:226)	PCDATA	$1, $1
	0x002d 00045 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:226)	CALL	reflect.flag.mustBeExportedSlow(SB)
	0x0032 00050 (<autogenerated>:1)	ADDQ	$8, SP
	0x0036 00054 (<autogenerated>:1)	POPQ	BP
	0x0037 00055 (<autogenerated>:1)	RET
	0x0038 00056 (<autogenerated>:1)	NOP
	0x0038 00056 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0038 00056 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0038 00056 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x003d 00061 (<autogenerated>:1)	NOP
	0x0040 00064 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0045 00069 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0045 00069 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004a 00074 (<autogenerated>:1)	JMP	0
	0x004c 00076 (<autogenerated>:1)	LEAQ	24(SP), R13
	0x0051 00081 (<autogenerated>:1)	CMPQ	(R12), R13
	0x0055 00085 (<autogenerated>:1)	JNE	23
	0x0057 00087 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x005b 00091 (<autogenerated>:1)	JMP	23
	0x0000 49 3b 66 10 76 32 55 48 89 e5 48 83 ec 08 4d 8b  I;f.v2UH..H...M.
	0x0010 66 20 4d 85 e4 75 35 48 8b 40 10 0f 1f 44 00 00  f M..u5H.@...D..
	0x0020 48 85 c0 74 08 48 a9 60 00 00 00 74 05 e8 00 00  H..t.H.`...t....
	0x0030 00 00 48 83 c4 08 5d c3 48 89 44 24 08 0f 1f 00  ..H...].H.D$....
	0x0040 e8 00 00 00 00 48 8b 44 24 08 eb b4 4c 8d 6c 24  .....H.D$...L.l$
	0x0050 18 4d 39 2c 24 75 c0 49 89 24 24 eb ba           .M9,$u.I.$$..
	rel 46+4 t=R_CALL reflect.flag.mustBeExportedSlow+0
	rel 65+4 t=R_CALL runtime.morestack_noctxt+0
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeExportedSlow STEXT dupok size=108 args=0x18 locals=0x10 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeExportedSlow(SB), DUPOK|WRAPPER|ABIInternal, $16-24
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	47
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0012 00018 (<autogenerated>:1)	TESTQ	R12, R12
	0x0015 00021 (<autogenerated>:1)	JNE	86
	0x0017 00023 (<autogenerated>:1)	NOP
	0x0017 00023 (<autogenerated>:1)	MOVQ	AX, reflect.f+24(FP)
	0x001c 00028 (<autogenerated>:1)	MOVQ	BX, reflect.f+32(FP)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$5, go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeExportedSlow.arginfo1(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$6, go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeExportedSlow.argliveinfo(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$3, $1
	0x0021 00033 (<autogenerated>:1)	MOVQ	CX, AX
	0x0024 00036 (<autogenerated>:1)	PCDATA	$1, $1
	0x0024 00036 (<autogenerated>:1)	CALL	reflect.flag.mustBeExportedSlow(SB)
	0x0029 00041 (<autogenerated>:1)	ADDQ	$8, SP
	0x002d 00045 (<autogenerated>:1)	POPQ	BP
	0x002e 00046 (<autogenerated>:1)	RET
	0x002f 00047 (<autogenerated>:1)	NOP
	0x002f 00047 (<autogenerated>:1)	PCDATA	$1, $-1
	0x002f 00047 (<autogenerated>:1)	PCDATA	$0, $-2
	0x002f 00047 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0034 00052 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x0039 00057 (<autogenerated>:1)	MOVQ	CX, 24(SP)
	0x003e 00062 (<autogenerated>:1)	NOP
	0x0040 00064 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0045 00069 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0045 00069 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004a 00074 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x004f 00079 (<autogenerated>:1)	MOVQ	24(SP), CX
	0x0054 00084 (<autogenerated>:1)	JMP	0
	0x0056 00086 (<autogenerated>:1)	LEAQ	24(SP), R13
	0x005b 00091 (<autogenerated>:1)	NOP
	0x0060 00096 (<autogenerated>:1)	CMPQ	(R12), R13
	0x0064 00100 (<autogenerated>:1)	JNE	23
	0x0066 00102 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x006a 00106 (<autogenerated>:1)	JMP	23
	0x0000 49 3b 66 10 76 29 55 48 89 e5 48 83 ec 08 4d 8b  I;f.v)UH..H...M.
	0x0010 66 20 4d 85 e4 75 3f 48 89 44 24 18 48 89 5c 24  f M..u?H.D$.H.\$
	0x0020 20 48 89 c8 e8 00 00 00 00 48 83 c4 08 5d c3 48   H.......H...].H
	0x0030 89 44 24 08 48 89 5c 24 10 48 89 4c 24 18 66 90  .D$.H.\$.H.L$.f.
	0x0040 e8 00 00 00 00 48 8b 44 24 08 48 8b 5c 24 10 48  .....H.D$.H.\$.H
	0x0050 8b 4c 24 18 eb aa 4c 8d 6c 24 18 0f 1f 44 00 00  .L$...L.l$...D..
	0x0060 4d 39 2c 24 75 b1 49 89 24 24 eb ab              M9,$u.I.$$..
	rel 37+4 t=R_CALL reflect.flag.mustBeExportedSlow+0
	rel 65+4 t=R_CALL runtime.morestack_noctxt+0
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeExportedSlow STEXT dupok size=77 args=0x8 locals=0x10 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeExportedSlow(SB), DUPOK|WRAPPER|ABIInternal, $16-8
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	43
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0012 00018 (<autogenerated>:1)	TESTQ	R12, R12
	0x0015 00021 (<autogenerated>:1)	JNE	60
	0x0017 00023 (<autogenerated>:1)	NOP
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$5, go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeExportedSlow.arginfo1(SB)
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$6, go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeExportedSlow.argliveinfo(SB)
	0x0017 00023 (<autogenerated>:1)	PCDATA	$3, $1
	0x0017 00023 (<autogenerated>:1)	MOVQ	16(AX), AX
	0x001b 00027 (<autogenerated>:1)	PCDATA	$1, $1
	0x001b 00027 (<autogenerated>:1)	NOP
	0x0020 00032 (<autogenerated>:1)	CALL	reflect.flag.mustBeExportedSlow(SB)
	0x0025 00037 (<autogenerated>:1)	ADDQ	$8, SP
	0x0029 00041 (<autogenerated>:1)	POPQ	BP
	0x002a 00042 (<autogenerated>:1)	RET
	0x002b 00043 (<autogenerated>:1)	NOP
	0x002b 00043 (<autogenerated>:1)	PCDATA	$1, $-1
	0x002b 00043 (<autogenerated>:1)	PCDATA	$0, $-2
	0x002b 00043 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0030 00048 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0035 00053 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0035 00053 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x003a 00058 (<autogenerated>:1)	JMP	0
	0x003c 00060 (<autogenerated>:1)	LEAQ	24(SP), R13
	0x0041 00065 (<autogenerated>:1)	CMPQ	(R12), R13
	0x0045 00069 (<autogenerated>:1)	JNE	23
	0x0047 00071 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x004b 00075 (<autogenerated>:1)	JMP	23
	0x0000 49 3b 66 10 76 25 55 48 89 e5 48 83 ec 08 4d 8b  I;f.v%UH..H...M.
	0x0010 66 20 4d 85 e4 75 25 48 8b 40 10 0f 1f 44 00 00  f M..u%H.@...D..
	0x0020 e8 00 00 00 00 48 83 c4 08 5d c3 48 89 44 24 08  .....H...].H.D$.
	0x0030 e8 00 00 00 00 48 8b 44 24 08 eb c4 4c 8d 6c 24  .....H.D$...L.l$
	0x0040 18 4d 39 2c 24 75 d0 49 89 24 24 eb ca           .M9,$u.I.$$..
	rel 33+4 t=R_CALL reflect.flag.mustBeExportedSlow+0
	rel 49+4 t=R_CALL runtime.morestack_noctxt+0
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.panicNotMap STEXT dupok size=108 args=0x18 locals=0x10 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.panicNotMap(SB), DUPOK|WRAPPER|ABIInternal, $16-24
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	47
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0012 00018 (<autogenerated>:1)	TESTQ	R12, R12
	0x0015 00021 (<autogenerated>:1)	JNE	86
	0x0017 00023 (<autogenerated>:1)	NOP
	0x0017 00023 (<autogenerated>:1)	MOVQ	AX, reflect.f+24(FP)
	0x001c 00028 (<autogenerated>:1)	MOVQ	BX, reflect.f+32(FP)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$5, go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.panicNotMap.arginfo1(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$6, go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.panicNotMap.argliveinfo(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$3, $1
	0x0021 00033 (<autogenerated>:1)	MOVQ	CX, AX
	0x0024 00036 (<autogenerated>:1)	PCDATA	$1, $1
	0x0024 00036 (<autogenerated>:1)	CALL	reflect.flag.panicNotMap(SB)
	0x0029 00041 (<autogenerated>:1)	ADDQ	$8, SP
	0x002d 00045 (<autogenerated>:1)	POPQ	BP
	0x002e 00046 (<autogenerated>:1)	RET
	0x002f 00047 (<autogenerated>:1)	NOP
	0x002f 00047 (<autogenerated>:1)	PCDATA	$1, $-1
	0x002f 00047 (<autogenerated>:1)	PCDATA	$0, $-2
	0x002f 00047 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0034 00052 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x0039 00057 (<autogenerated>:1)	MOVQ	CX, 24(SP)
	0x003e 00062 (<autogenerated>:1)	NOP
	0x0040 00064 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0045 00069 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0045 00069 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004a 00074 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x004f 00079 (<autogenerated>:1)	MOVQ	24(SP), CX
	0x0054 00084 (<autogenerated>:1)	JMP	0
	0x0056 00086 (<autogenerated>:1)	LEAQ	24(SP), R13
	0x005b 00091 (<autogenerated>:1)	NOP
	0x0060 00096 (<autogenerated>:1)	CMPQ	(R12), R13
	0x0064 00100 (<autogenerated>:1)	JNE	23
	0x0066 00102 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x006a 00106 (<autogenerated>:1)	JMP	23
	0x0000 49 3b 66 10 76 29 55 48 89 e5 48 83 ec 08 4d 8b  I;f.v)UH..H...M.
	0x0010 66 20 4d 85 e4 75 3f 48 89 44 24 18 48 89 5c 24  f M..u?H.D$.H.\$
	0x0020 20 48 89 c8 e8 00 00 00 00 48 83 c4 08 5d c3 48   H.......H...].H
	0x0030 89 44 24 08 48 89 5c 24 10 48 89 4c 24 18 66 90  .D$.H.\$.H.L$.f.
	0x0040 e8 00 00 00 00 48 8b 44 24 08 48 8b 5c 24 10 48  .....H.D$.H.\$.H
	0x0050 8b 4c 24 18 eb aa 4c 8d 6c 24 18 0f 1f 44 00 00  .L$...L.l$...D..
	0x0060 4d 39 2c 24 75 b1 49 89 24 24 eb ab              M9,$u.I.$$..
	rel 37+4 t=R_CALL reflect.flag.panicNotMap+0
	rel 65+4 t=R_CALL runtime.morestack_noctxt+0
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.panicNotMap STEXT dupok size=77 args=0x8 locals=0x10 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.panicNotMap(SB), DUPOK|WRAPPER|ABIInternal, $16-8
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	43
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0012 00018 (<autogenerated>:1)	TESTQ	R12, R12
	0x0015 00021 (<autogenerated>:1)	JNE	60
	0x0017 00023 (<autogenerated>:1)	NOP
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$5, go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.panicNotMap.arginfo1(SB)
	0x0017 00023 (<autogenerated>:1)	FUNCDATA	$6, go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.panicNotMap.argliveinfo(SB)
	0x0017 00023 (<autogenerated>:1)	PCDATA	$3, $1
	0x0017 00023 (<autogenerated>:1)	MOVQ	16(AX), AX
	0x001b 00027 (<autogenerated>:1)	PCDATA	$1, $1
	0x001b 00027 (<autogenerated>:1)	NOP
	0x0020 00032 (<autogenerated>:1)	CALL	reflect.flag.panicNotMap(SB)
	0x0025 00037 (<autogenerated>:1)	ADDQ	$8, SP
	0x0029 00041 (<autogenerated>:1)	POPQ	BP
	0x002a 00042 (<autogenerated>:1)	RET
	0x002b 00043 (<autogenerated>:1)	NOP
	0x002b 00043 (<autogenerated>:1)	PCDATA	$1, $-1
	0x002b 00043 (<autogenerated>:1)	PCDATA	$0, $-2
	0x002b 00043 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0030 00048 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0035 00053 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0035 00053 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x003a 00058 (<autogenerated>:1)	JMP	0
	0x003c 00060 (<autogenerated>:1)	LEAQ	24(SP), R13
	0x0041 00065 (<autogenerated>:1)	CMPQ	(R12), R13
	0x0045 00069 (<autogenerated>:1)	JNE	23
	0x0047 00071 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x004b 00075 (<autogenerated>:1)	JMP	23
	0x0000 49 3b 66 10 76 25 55 48 89 e5 48 83 ec 08 4d 8b  I;f.v%UH..H...M.
	0x0010 66 20 4d 85 e4 75 25 48 8b 40 10 0f 1f 44 00 00  f M..u%H.@...D..
	0x0020 e8 00 00 00 00 48 83 c4 08 5d c3 48 89 44 24 08  .....H...].H.D$.
	0x0030 e8 00 00 00 00 48 8b 44 24 08 eb c4 4c 8d 6c 24  .....H.D$...L.l$
	0x0040 18 4d 39 2c 24 75 d0 49 89 24 24 eb ca           .M9,$u.I.$$..
	rel 33+4 t=R_CALL reflect.flag.panicNotMap+0
	rel 49+4 t=R_CALL runtime.morestack_noctxt+0
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.ro STEXT dupok nosplit size=59 args=0x18 locals=0x0 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.ro(SB), DUPOK|NOSPLIT|WRAPPER|NOFRAME|ABIInternal, $0-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0004 00004 (<autogenerated>:1)	TESTQ	R12, R12
	0x0007 00007 (<autogenerated>:1)	JNE	42
	0x0009 00009 (<autogenerated>:1)	NOP
	0x0009 00009 (<autogenerated>:1)	MOVQ	AX, reflect.f+8(FP)
	0x000e 00014 (<autogenerated>:1)	MOVQ	BX, reflect.f+16(FP)
	0x0013 00019 (<autogenerated>:1)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0013 00019 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0013 00019 (<autogenerated>:1)	FUNCDATA	$5, go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.ro.arginfo1(SB)
	0x0013 00019 (<autogenerated>:1)	FUNCDATA	$6, go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.ro.argliveinfo(SB)
	0x0013 00019 (<autogenerated>:1)	PCDATA	$3, $1
	0x0013 00019 (<unknown line number>)	NOP
	0x0013 00019 (<autogenerated>:1)	XCHGL	AX, AX
	0x0014 00020 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:90)	TESTQ	$96, CX
	0x001b 00027 (<autogenerated>:1)	MOVL	$0, AX
	0x0020 00032 (<autogenerated>:1)	MOVL	$32, CX
	0x0025 00037 (<autogenerated>:1)	CMOVQNE	CX, AX
	0x0029 00041 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:90)	RET
	0x002a 00042 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:90)	LEAQ	8(SP), R13
	0x002f 00047 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:90)	CMPQ	(R12), R13
	0x0033 00051 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:90)	JNE	9
	0x0035 00053 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:90)	MOVQ	SP, (R12)
	0x0039 00057 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:90)	JMP	9
	0x0000 4d 8b 66 20 4d 85 e4 75 21 48 89 44 24 08 48 89  M.f M..u!H.D$.H.
	0x0010 5c 24 10 90 48 f7 c1 60 00 00 00 b8 00 00 00 00  \$..H..`........
	0x0020 b9 20 00 00 00 48 0f 45 c1 c3 4c 8d 6c 24 08 4d  . ...H.E..L.l$.M
	0x0030 39 2c 24 75 d4 49 89 24 24 eb ce                 9,$u.I.$$..
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.ro STEXT dupok nosplit size=52 args=0x8 locals=0x0 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.ro(SB), DUPOK|NOSPLIT|WRAPPER|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0004 00004 (<autogenerated>:1)	TESTQ	R12, R12
	0x0007 00007 (<autogenerated>:1)	JNE	35
	0x0009 00009 (<autogenerated>:1)	NOP
	0x0009 00009 (<autogenerated>:1)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0009 00009 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0009 00009 (<autogenerated>:1)	FUNCDATA	$5, go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.ro.arginfo1(SB)
	0x0009 00009 (<autogenerated>:1)	FUNCDATA	$6, go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.ro.argliveinfo(SB)
	0x0009 00009 (<autogenerated>:1)	PCDATA	$3, $1
	0x0009 00009 (<autogenerated>:1)	MOVQ	16(AX), CX
	0x000d 00013 (<unknown line number>)	NOP
	0x000d 00013 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:90)	TESTQ	$96, CX
	0x0014 00020 (<autogenerated>:1)	MOVL	$0, AX
	0x0019 00025 (<autogenerated>:1)	MOVL	$32, CX
	0x001e 00030 (<autogenerated>:1)	CMOVQNE	CX, AX
	0x0022 00034 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:90)	RET
	0x0023 00035 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:90)	LEAQ	8(SP), R13
	0x0028 00040 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:90)	CMPQ	(R12), R13
	0x002c 00044 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:90)	JNE	9
	0x002e 00046 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:90)	MOVQ	SP, (R12)
	0x0032 00050 (/home/boris/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.linux-amd64/src/reflect/value.go:90)	JMP	9
	0x0000 4d 8b 66 20 4d 85 e4 75 1a 48 8b 48 10 48 f7 c1  M.f M..u.H.H.H..
	0x0010 60 00 00 00 b8 00 00 00 00 b9 20 00 00 00 48 0f  `......... ...H.
	0x0020 45 c1 c3 4c 8d 6c 24 08 4d 39 2c 24 75 db 49 89  E..L.l$.M9,$u.I.
	0x0030 24 24 eb d5                                      $$..
go:cuinfo.producer.main SDWARFCUINFO dupok size=0
	0x0000 2d 64 77 61 72 66 3d 66 61 6c 73 65 20 72 65 67  -dwarf=false reg
	0x0010 61 62 69                                         abi
go:itab.testing/internal/testdeps.TestDeps,testing.testDeps SRODATA dupok size=144
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 ac c4 ec 42 00 00 00 00 00 00 00 00 00 00 00 00  ...B............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR type:testing.testDeps+0
	rel 8+8 t=R_ADDR type:testing/internal/testdeps.TestDeps+0
	rel 24+8 t=RelocType(-32767) testing/internal/testdeps.(*TestDeps).CheckCorpus+0
	rel 32+8 t=RelocType(-32767) testing/internal/testdeps.(*TestDeps).CoordinateFuzzing+0
	rel 40+8 t=RelocType(-32767) testing/internal/testdeps.(*TestDeps).ImportPath+0
	rel 48+8 t=RelocType(-32767) testing/internal/testdeps.(*TestDeps).InitRuntimeCoverage+0
	rel 56+8 t=RelocType(-32767) testing/internal/testdeps.(*TestDeps).MatchString+0
	rel 64+8 t=RelocType(-32767) testing/internal/testdeps.(*TestDeps).ReadCorpus+0
	rel 72+8 t=RelocType(-32767) testing/internal/testdeps.(*TestDeps).ResetCoverage+0
	rel 80+8 t=RelocType(-32767) testing/internal/testdeps.(*TestDeps).RunFuzzWorker+0
	rel 88+8 t=RelocType(-32767) testing/internal/testdeps.(*TestDeps).SetPanicOnExit0+0
	rel 96+8 t=RelocType(-32767) testing/internal/testdeps.(*TestDeps).SnapshotCoverage+0
	rel 104+8 t=RelocType(-32767) testing/internal/testdeps.(*TestDeps).StartCPUProfile+0
	rel 112+8 t=RelocType(-32767) testing/internal/testdeps.(*TestDeps).StartTestLog+0
	rel 120+8 t=RelocType(-32767) testing/internal/testdeps.(*TestDeps).StopCPUProfile+0
	rel 128+8 t=RelocType(-32767) testing/internal/testdeps.(*TestDeps).StopTestLog+0
	rel 136+8 t=RelocType(-32767) testing/internal/testdeps.(*TestDeps).WriteProfileTo+0
go:cuinfo.packagename.main SDWARFCUINFO dupok size=0
	0x0000 6d 61 69 6e                                      main
go:string."TestBitvector" SRODATA dupok size=13
	0x0000 54 65 73 74 42 69 74 76 65 63 74 6f 72           TestBitvector
go:string."BenchmarkArrayIndex" SRODATA dupok size=19
	0x0000 42 65 6e 63 68 6d 61 72 6b 41 72 72 61 79 49 6e  BenchmarkArrayIn
	0x0010 64 65 78                                         dex
go:string."BenchmarkBranch" SRODATA dupok size=15
	0x0000 42 65 6e 63 68 6d 61 72 6b 42 72 61 6e 63 68     BenchmarkBranch
go:string."BenchmarkAsciiVector" SRODATA dupok size=20
	0x0000 42 65 6e 63 68 6d 61 72 6b 41 73 63 69 69 56 65  BenchmarkAsciiVe
	0x0010 63 74 6f 72                                      ctor
go:string."BenchmarkWillfLibBitvector" SRODATA dupok size=26
	0x0000 42 65 6e 63 68 6d 61 72 6b 57 69 6c 6c 66 4c 69  BenchmarkWillfLi
	0x0010 62 42 69 74 76 65 63 74 6f 72                    bBitvector
go:string."BenchmarkLookup" SRODATA dupok size=15
	0x0000 42 65 6e 63 68 6d 61 72 6b 4c 6f 6f 6b 75 70     BenchmarkLookup
main..inittask SNOPTRDATA size=16
	0x0000 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+0 t=R_INITORDER os..inittask+0
	rel 0+0 t=R_INITORDER testing..inittask+0
	rel 0+0 t=R_INITORDER testing/internal/testdeps..inittask+0
	rel 0+0 t=R_INITORDER command-line-arguments..inittask+0
	rel 8+8 t=R_ADDR main.init.0+0
main.tests SDATA size=24
	0x0000 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0010 01 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR main..stmp_0+0
 SDWARFVAR size=27
	0x0000 0a 6d 61 69 6e 2e 74 65 73 74 73 00 09 03 00 00  .main.tests.....
	0x0010 00 00 00 00 00 00 00 00 00 00 01                 ...........
	rel 14+8 t=R_ADDR main.tests+0
	rel 22+4 t=R_DWARFSECREF go:info.[]testing.InternalTest+0
runtime.memequal64·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal64+0
runtime.gcbits.0100000000000000 SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
type:.namedata.*[]testing.InternalTest- SRODATA dupok size=25
	0x0000 00 17 2a 5b 5d 74 65 73 74 69 6e 67 2e 49 6e 74  ..*[]testing.Int
	0x0010 65 72 6e 61 6c 54 65 73 74                       ernalTest
type:*[]testing.InternalTest SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 63 8b 60 2d 08 08 08 36 00 00 00 00 00 00 00 00  c.`-...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]testing.InternalTest-+0
	rel 48+8 t=R_ADDR type:[]testing.InternalTest+0
type:[]testing.InternalTest SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 05 d2 89 e9 02 08 08 17 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]testing.InternalTest-+0
	rel 44+4 t=RelocType(-32763) type:*[]testing.InternalTest+0
	rel 48+8 t=R_ADDR type:testing.InternalTest+0
main.benchmarks SDATA size=24
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	0x0010 05 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR main..stmp_1+0
 SDWARFVAR size=32
	0x0000 0a 6d 61 69 6e 2e 62 65 6e 63 68 6d 61 72 6b 73  .main.benchmarks
	0x0010 00 09 03 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	rel 19+8 t=R_ADDR main.benchmarks+0
	rel 27+4 t=R_DWARFSECREF go:info.[]testing.InternalBenchmark+0
type:.namedata.*[]testing.InternalBenchmark- SRODATA dupok size=30
	0x0000 00 1c 2a 5b 5d 74 65 73 74 69 6e 67 2e 49 6e 74  ..*[]testing.Int
	0x0010 65 72 6e 61 6c 42 65 6e 63 68 6d 61 72 6b        ernalBenchmark
type:*[]testing.InternalBenchmark SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 ac 53 74 aa 08 08 08 36 00 00 00 00 00 00 00 00  .St....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]testing.InternalBenchmark-+0
	rel 48+8 t=R_ADDR type:[]testing.InternalBenchmark+0
type:[]testing.InternalBenchmark SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 c1 84 0c 58 02 08 08 17 00 00 00 00 00 00 00 00  ...X............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]testing.InternalBenchmark-+0
	rel 44+4 t=RelocType(-32763) type:*[]testing.InternalBenchmark+0
	rel 48+8 t=R_ADDR type:testing.InternalBenchmark+0
main.fuzzTargets SDATA size=24
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR main..stmp_2+0
 SDWARFVAR size=33
	0x0000 0a 6d 61 69 6e 2e 66 75 7a 7a 54 61 72 67 65 74  .main.fuzzTarget
	0x0010 73 00 09 03 00 00 00 00 00 00 00 00 00 00 00 00  s...............
	0x0020 01                                               .
	rel 20+8 t=R_ADDR main.fuzzTargets+0
	rel 28+4 t=R_DWARFSECREF go:info.[]testing.InternalFuzzTarget+0
type:.namedata.*[]testing.InternalFuzzTarget- SRODATA dupok size=31
	0x0000 00 1d 2a 5b 5d 74 65 73 74 69 6e 67 2e 49 6e 74  ..*[]testing.Int
	0x0010 65 72 6e 61 6c 46 75 7a 7a 54 61 72 67 65 74     ernalFuzzTarget
type:*[]testing.InternalFuzzTarget SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 0c 95 c1 50 08 08 08 36 00 00 00 00 00 00 00 00  ...P...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]testing.InternalFuzzTarget-+0
	rel 48+8 t=R_ADDR type:[]testing.InternalFuzzTarget+0
type:[]testing.InternalFuzzTarget SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 cd a0 2e 50 02 08 08 17 00 00 00 00 00 00 00 00  ...P............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]testing.InternalFuzzTarget-+0
	rel 44+4 t=RelocType(-32763) type:*[]testing.InternalFuzzTarget+0
	rel 48+8 t=R_ADDR type:testing.InternalFuzzTarget+0
main.examples SDATA size=24
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR main..stmp_3+0
 SDWARFVAR size=30
	0x0000 0a 6d 61 69 6e 2e 65 78 61 6d 70 6c 65 73 00 09  .main.examples..
	0x0010 03 00 00 00 00 00 00 00 00 00 00 00 00 01        ..............
	rel 17+8 t=R_ADDR main.examples+0
	rel 25+4 t=R_DWARFSECREF go:info.[]testing.InternalExample+0
type:.namedata.*[]testing.InternalExample- SRODATA dupok size=28
	0x0000 00 1a 2a 5b 5d 74 65 73 74 69 6e 67 2e 49 6e 74  ..*[]testing.Int
	0x0010 65 72 6e 61 6c 45 78 61 6d 70 6c 65              ernalExample
type:*[]testing.InternalExample SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a8 25 3a a1 08 08 08 36 00 00 00 00 00 00 00 00  .%:....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]testing.InternalExample-+0
	rel 48+8 t=R_ADDR type:[]testing.InternalExample+0
type:[]testing.InternalExample SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 fb 19 f6 57 02 08 08 17 00 00 00 00 00 00 00 00  ...W............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]testing.InternalExample-+0
	rel 44+4 t=RelocType(-32763) type:*[]testing.InternalExample+0
	rel 48+8 t=R_ADDR type:testing.InternalExample+0
main..stmp_0 SDATA static size=24
	0x0000 00 00 00 00 00 00 00 00 0d 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR go:string."TestBitvector"+0
	rel 16+8 t=R_ADDR command-line-arguments.TestBitvector·f+0
type:.namedata.*[1]testing.InternalTest- SRODATA dupok size=26
	0x0000 00 18 2a 5b 31 5d 74 65 73 74 69 6e 67 2e 49 6e  ..*[1]testing.In
	0x0010 74 65 72 6e 61 6c 54 65 73 74                    ternalTest
type:noalg.*[1]testing.InternalTest SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 65 bf f2 24 00 08 08 36 00 00 00 00 00 00 00 00  e..$...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[1]testing.InternalTest-+0
	rel 48+8 t=R_ADDR type:noalg.[1]testing.InternalTest+0
runtime.gcbits.0500000000000000 SRODATA dupok size=8
	0x0000 05 00 00 00 00 00 00 00                          ........
type:noalg.[1]testing.InternalTest SRODATA dupok size=72
	0x0000 18 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	0x0010 42 1f c2 24 02 08 08 11 00 00 00 00 00 00 00 00  B..$............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0500000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[1]testing.InternalTest-+0
	rel 44+4 t=RelocType(-32763) type:noalg.*[1]testing.InternalTest+0
	rel 48+8 t=R_ADDR type:testing.InternalTest+0
	rel 56+8 t=R_ADDR type:[]testing.InternalTest+0
main..stmp_1 SDATA static size=120
	0x0000 00 00 00 00 00 00 00 00 13 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 0f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 1a 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 0f 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR go:string."BenchmarkArrayIndex"+0
	rel 16+8 t=R_ADDR command-line-arguments.BenchmarkArrayIndex·f+0
	rel 24+8 t=R_ADDR go:string."BenchmarkBranch"+0
	rel 40+8 t=R_ADDR command-line-arguments.BenchmarkBranch·f+0
	rel 48+8 t=R_ADDR go:string."BenchmarkAsciiVector"+0
	rel 64+8 t=R_ADDR command-line-arguments.BenchmarkAsciiVector·f+0
	rel 72+8 t=R_ADDR go:string."BenchmarkWillfLibBitvector"+0
	rel 88+8 t=R_ADDR command-line-arguments.BenchmarkWillfLibBitvector·f+0
	rel 96+8 t=R_ADDR go:string."BenchmarkLookup"+0
	rel 112+8 t=R_ADDR command-line-arguments.BenchmarkLookup·f+0
type:.namedata.*[5]testing.InternalBenchmark- SRODATA dupok size=31
	0x0000 00 1d 2a 5b 35 5d 74 65 73 74 69 6e 67 2e 49 6e  ..*[5]testing.In
	0x0010 74 65 72 6e 61 6c 42 65 6e 63 68 6d 61 72 6b     ternalBenchmark
type:noalg.*[5]testing.InternalBenchmark SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 fc 97 bc f1 00 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[5]testing.InternalBenchmark-+0
	rel 48+8 t=R_ADDR type:noalg.[5]testing.InternalBenchmark+0
runtime.gcbits.6d5b000000000000 SRODATA dupok size=8
	0x0000 6d 5b 00 00 00 00 00 00                          m[......
type:noalg.[5]testing.InternalBenchmark SRODATA dupok size=72
	0x0000 78 00 00 00 00 00 00 00 78 00 00 00 00 00 00 00  x.......x.......
	0x0010 36 3c bd 91 02 08 08 11 00 00 00 00 00 00 00 00  6<..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 05 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.6d5b000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[5]testing.InternalBenchmark-+0
	rel 44+4 t=RelocType(-32763) type:noalg.*[5]testing.InternalBenchmark+0
	rel 48+8 t=R_ADDR type:testing.InternalBenchmark+0
	rel 56+8 t=R_ADDR type:[]testing.InternalBenchmark+0
main..stmp_2 SNOPTRBSS static size=0
type:.namedata.*[0]testing.InternalFuzzTarget- SRODATA dupok size=32
	0x0000 00 1e 2a 5b 30 5d 74 65 73 74 69 6e 67 2e 49 6e  ..*[0]testing.In
	0x0010 74 65 72 6e 61 6c 46 75 7a 7a 54 61 72 67 65 74  ternalFuzzTarget
type:noalg.*[0]testing.InternalFuzzTarget SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 94 e7 4e da 00 08 08 36 00 00 00 00 00 00 00 00  ..N....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[0]testing.InternalFuzzTarget-+0
	rel 48+8 t=R_ADDR type:noalg.[0]testing.InternalFuzzTarget+0
runtime.gcbits. SRODATA dupok size=0
type:noalg.[0]testing.InternalFuzzTarget SRODATA dupok size=72
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 63 9c da 6b 02 08 08 11 00 00 00 00 00 00 00 00  c..k............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[0]testing.InternalFuzzTarget-+0
	rel 44+4 t=RelocType(-32763) type:noalg.*[0]testing.InternalFuzzTarget+0
	rel 48+8 t=R_ADDR type:testing.InternalFuzzTarget+0
	rel 56+8 t=R_ADDR type:[]testing.InternalFuzzTarget+0
main..stmp_3 SNOPTRBSS static size=0
type:.namedata.*[0]testing.InternalExample- SRODATA dupok size=29
	0x0000 00 1b 2a 5b 30 5d 74 65 73 74 69 6e 67 2e 49 6e  ..*[0]testing.In
	0x0010 74 65 72 6e 61 6c 45 78 61 6d 70 6c 65           ternalExample
type:noalg.*[0]testing.InternalExample SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 46 55 ac 4c 00 08 08 36 00 00 00 00 00 00 00 00  FU.L...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[0]testing.InternalExample-+0
	rel 48+8 t=R_ADDR type:noalg.[0]testing.InternalExample+0
type:noalg.[0]testing.InternalExample SRODATA dupok size=72
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 be 0b 51 e0 02 08 08 11 00 00 00 00 00 00 00 00  ..Q.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[0]testing.InternalExample-+0
	rel 44+4 t=RelocType(-32763) type:noalg.*[0]testing.InternalExample+0
	rel 48+8 t=R_ADDR type:testing.InternalExample+0
	rel 56+8 t=R_ADDR type:[]testing.InternalExample+0
command-line-arguments.BenchmarkArrayIndex·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR command-line-arguments.BenchmarkArrayIndex+0
command-line-arguments.BenchmarkAsciiVector·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR command-line-arguments.BenchmarkAsciiVector+0
command-line-arguments.BenchmarkBranch·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR command-line-arguments.BenchmarkBranch+0
command-line-arguments.BenchmarkLookup·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR command-line-arguments.BenchmarkLookup+0
command-line-arguments.BenchmarkWillfLibBitvector·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR command-line-arguments.BenchmarkWillfLibBitvector+0
command-line-arguments.TestBitvector·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR command-line-arguments.TestBitvector+0
gclocals·g2BeySu+wFnoycgXfElmcg== SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
gclocals·TjPuuCwdlCpTaRQGRKTrYw== SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 03 00                    ..........
gclocals·J5F+7Qw7O7ve2QcWC7DpeQ== SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.kind.arginfo1 SRODATA static dupok size=9
	0x0000 fe 00 08 08 08 10 08 fd ff                       .........
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.kind.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·wgcWObbY2HYnK2SU/U22lA== SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 01 00                    ..........
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.kind.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.kind.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·jZtJ1ccH9bAYoe1wqsw9Mw== SRODATA dupok size=11
	0x0000 03 00 00 00 02 00 00 00 03 00 00                 ...........
gclocals·dGrMWTWIngKGfVYjHi0adA== SRODATA dupok size=11
	0x0000 03 00 00 00 01 00 00 00 00 00 01                 ...........
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBe.arginfo1 SRODATA static dupok size=11
	0x0000 fe 00 08 08 08 10 08 fd 18 08 ff                 ...........
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBe.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·ZzMiPAiVBg7DJ6dh/CjSag== SRODATA dupok size=11
	0x0000 03 00 00 00 01 00 00 00 01 00 00                 ...........
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBe.arginfo1 SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBe.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeAssignable.arginfo1 SRODATA static dupok size=9
	0x0000 fe 00 08 08 08 10 08 fd ff                       .........
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeAssignable.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeAssignable.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeAssignable.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeAssignableSlow.arginfo1 SRODATA static dupok size=9
	0x0000 fe 00 08 08 08 10 08 fd ff                       .........
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeAssignableSlow.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeAssignableSlow.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeAssignableSlow.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeExported.arginfo1 SRODATA static dupok size=9
	0x0000 fe 00 08 08 08 10 08 fd ff                       .........
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeExported.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeExported.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeExported.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeExportedSlow.arginfo1 SRODATA static dupok size=9
	0x0000 fe 00 08 08 08 10 08 fd ff                       .........
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.mustBeExportedSlow.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeExportedSlow.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.mustBeExportedSlow.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.panicNotMap.arginfo1 SRODATA static dupok size=9
	0x0000 fe 00 08 08 08 10 08 fd ff                       .........
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.panicNotMap.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.panicNotMap.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.panicNotMap.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.ro.arginfo1 SRODATA static dupok size=9
	0x0000 fe 00 08 08 08 10 08 fd ff                       .........
go.shape.struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }.reflect.ro.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.ro.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
go.shape.(*struct { reflect.typ_ *internal/abi.Type; reflect.ptr unsafe.Pointer; reflect.flag }).reflect.ro.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
